{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../errors.js\";\nimport { logger } from \"../../logger/index.js\";\nimport { PropsAllowlists } from \"../../propsAllowlists.js\";\nimport { createReactDOMStyle, createTextShadowValue, createTransformValue } from './webUtils';\nexport { createJSReanimatedModule } from \"./JSReanimated.js\";\nglobal._makeShareableClone = () => {\n  throw new ReanimatedError('`_makeShareableClone` should never be called from React runtime.');\n};\nglobal._scheduleHostFunctionOnJS = () => {\n  throw new ReanimatedError('`_scheduleOnJS` should never be called from React runtime.');\n};\nglobal._scheduleOnRuntime = () => {\n  throw new ReanimatedError('`_scheduleOnRuntime` should never be called from React runtime.');\n};\nexport const _updatePropsJS = (updates, viewRef, isAnimatedProps) => {\n  if (viewRef) {\n    const component = viewRef.getAnimatableRef ? viewRef.getAnimatableRef() : viewRef;\n    const [rawStyles] = Object.keys(updates).reduce((acc, key) => {\n      const value = updates[key];\n      const index = typeof value === 'function' ? 1 : 0;\n      acc[index][key] = value;\n      return acc;\n    }, [{}, {}]);\n    if (typeof component.setNativeProps === 'function') {\n      setNativeProps(component, rawStyles, isAnimatedProps);\n    } else if (createReactDOMStyle !== undefined && component.style !== undefined) {\n      updatePropsDOM(component, rawStyles, isAnimatedProps);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach(key => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      const componentName = 'className' in component ? component?.className : '';\n      logger.warn(`It's not possible to manipulate the component ${componentName}`);\n    }\n  }\n};\nconst setNativeProps = (component, newProps, isAnimatedProps) => {\n  if (isAnimatedProps) {\n    const uiProps = {};\n    for (const key in newProps) {\n      if (isNativeProp(key)) {\n        uiProps[key] = newProps[key];\n      }\n    }\n    component.setNativeProps?.(uiProps);\n  }\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = Object.assign({}, previousStyle, newProps);\n  component.previousStyle = currentStyle;\n  component.setNativeProps?.({\n    style: currentStyle\n  });\n};\nconst updatePropsDOM = (component, style, isAnimatedProps) => {\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = Object.assign({}, previousStyle, style);\n  component.previousStyle = currentStyle;\n  const domStyle = createReactDOMStyle(currentStyle);\n  if (Array.isArray(domStyle.transform) && createTransformValue !== undefined) {\n    domStyle.transform = createTransformValue(domStyle.transform);\n  }\n  if (createTextShadowValue !== undefined && (domStyle.textShadowColor || domStyle.textShadowRadius || domStyle.textShadowOffset)) {\n    domStyle.textShadow = createTextShadowValue({\n      textShadowColor: domStyle.textShadowColor,\n      textShadowOffset: domStyle.textShadowOffset,\n      textShadowRadius: domStyle.textShadowRadius\n    });\n  }\n  for (const key in domStyle) {\n    if (isAnimatedProps) {\n      if (component.nodeName === 'INPUT' && key === 'text') {\n        component.value = domStyle[key];\n      } else {\n        component.setAttribute(key, domStyle[key]);\n      }\n    } else {\n      component.style[key] = domStyle[key];\n    }\n  }\n};\nfunction isNativeProp(propName) {\n  return !!PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];\n}","map":{"version":3,"names":["ReanimatedError","logger","PropsAllowlists","createReactDOMStyle","createTextShadowValue","createTransformValue","createJSReanimatedModule","global","_makeShareableClone","_scheduleHostFunctionOnJS","_scheduleOnRuntime","_updatePropsJS","updates","viewRef","isAnimatedProps","component","getAnimatableRef","rawStyles","Object","keys","reduce","acc","key","value","index","setNativeProps","undefined","style","updatePropsDOM","props","length","forEach","dashedKey","replace","m","toLowerCase","_touchableNode","setAttribute","componentName","className","warn","newProps","uiProps","isNativeProp","previousStyle","currentStyle","assign","domStyle","Array","isArray","transform","textShadowColor","textShadowRadius","textShadowOffset","textShadow","nodeName","propName","NATIVE_THREAD_PROPS_WHITELIST"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-reanimated\\src\\ReanimatedModule\\js-reanimated\\index.ts"],"sourcesContent":["'use strict';\nimport type { AnimatedStyle, StyleProps } from '../../commonTypes';\nimport { ReanimatedError } from '../../errors';\nimport { logger } from '../../logger';\nimport { PropsAllowlists } from '../../propsAllowlists';\nimport {\n  createReactDOMStyle,\n  createTextShadowValue,\n  createTransformValue,\n} from './webUtils';\n\nexport { createJSReanimatedModule } from './JSReanimated';\n\n// TODO: Install these global functions in a more suitable location.\nglobal._makeShareableClone = () => {\n  throw new ReanimatedError(\n    '`_makeShareableClone` should never be called from React runtime.'\n  );\n};\n\nglobal._scheduleHostFunctionOnJS = () => {\n  throw new ReanimatedError(\n    '`_scheduleOnJS` should never be called from React runtime.'\n  );\n};\n\nglobal._scheduleOnRuntime = () => {\n  throw new ReanimatedError(\n    '`_scheduleOnRuntime` should never be called from React runtime.'\n  );\n};\n\ninterface JSReanimatedComponent {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  style?: StyleProps;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n}\n\nexport interface ReanimatedHTMLElement extends HTMLElement {\n  previousStyle: StyleProps;\n  setNativeProps?: (style: StyleProps) => void;\n  props: Record<string, string | number>;\n  _touchableNode: {\n    setAttribute: (key: string, props: unknown) => void;\n  };\n  reanimatedDummy?: boolean;\n  removedAfterAnimation?: boolean;\n}\n\n// TODO: Move these functions outside of index file.\nexport const _updatePropsJS = (\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  updates: StyleProps | AnimatedStyle<any>,\n  viewRef: (JSReanimatedComponent | ReanimatedHTMLElement) & {\n    getAnimatableRef?: () => JSReanimatedComponent | ReanimatedHTMLElement;\n  },\n  isAnimatedProps?: boolean\n): void => {\n  if (viewRef) {\n    const component = viewRef.getAnimatableRef\n      ? viewRef.getAnimatableRef()\n      : viewRef;\n    const [rawStyles] = Object.keys(updates).reduce(\n      (acc: [StyleProps, AnimatedStyle<any>], key) => {\n        const value = updates[key];\n        const index = typeof value === 'function' ? 1 : 0;\n        acc[index][key] = value;\n        return acc;\n      },\n      [{}, {}]\n    );\n\n    if (typeof component.setNativeProps === 'function') {\n      // This is the legacy way to update props on React Native Web <= 0.18.\n      // Also, some components (e.g. from react-native-svg) don't have styles\n      // and always provide setNativeProps function instead (even on React Native Web 0.19+).\n      setNativeProps(component, rawStyles, isAnimatedProps);\n    } else if (\n      createReactDOMStyle !== undefined &&\n      component.style !== undefined\n    ) {\n      // React Native Web 0.19+ no longer provides setNativeProps function,\n      // so we need to update DOM nodes directly.\n      updatePropsDOM(component, rawStyles, isAnimatedProps);\n    } else if (Object.keys(component.props).length > 0) {\n      Object.keys(component.props).forEach((key) => {\n        if (!rawStyles[key]) {\n          return;\n        }\n        const dashedKey = key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n        component._touchableNode.setAttribute(dashedKey, rawStyles[key]);\n      });\n    } else {\n      const componentName =\n        'className' in component ? component?.className : '';\n      logger.warn(\n        `It's not possible to manipulate the component ${componentName}`\n      );\n    }\n  }\n};\n\nconst setNativeProps = (\n  component: JSReanimatedComponent | ReanimatedHTMLElement,\n  newProps: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  if (isAnimatedProps) {\n    const uiProps: Record<string, unknown> = {};\n    for (const key in newProps) {\n      if (isNativeProp(key)) {\n        uiProps[key] = newProps[key];\n      }\n    }\n    // Only update UI props directly on the component,\n    // other props can be updated as standard style props.\n    component.setNativeProps?.(uiProps);\n  }\n\n  const previousStyle = component.previousStyle ? component.previousStyle : {};\n  const currentStyle = { ...previousStyle, ...newProps };\n  component.previousStyle = currentStyle;\n\n  component.setNativeProps?.({ style: currentStyle });\n};\n\nconst updatePropsDOM = (\n  component: JSReanimatedComponent | HTMLElement,\n  style: StyleProps,\n  isAnimatedProps?: boolean\n): void => {\n  const previousStyle = (component as JSReanimatedComponent).previousStyle\n    ? (component as JSReanimatedComponent).previousStyle\n    : {};\n  const currentStyle = { ...previousStyle, ...style };\n  (component as JSReanimatedComponent).previousStyle = currentStyle;\n\n  const domStyle = createReactDOMStyle(currentStyle);\n  if (Array.isArray(domStyle.transform) && createTransformValue !== undefined) {\n    domStyle.transform = createTransformValue(domStyle.transform);\n  }\n\n  if (\n    createTextShadowValue !== undefined &&\n    (domStyle.textShadowColor ||\n      domStyle.textShadowRadius ||\n      domStyle.textShadowOffset)\n  ) {\n    domStyle.textShadow = createTextShadowValue({\n      textShadowColor: domStyle.textShadowColor,\n      textShadowOffset: domStyle.textShadowOffset,\n      textShadowRadius: domStyle.textShadowRadius,\n    });\n  }\n\n  for (const key in domStyle) {\n    if (isAnimatedProps) {\n      // We need to explicitly set the 'text' property on input component because React Native's\n      // internal _valueTracker (https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/inputValueTracking.js)\n      // prevents updates when only modifying attributes.\n      if ((component as HTMLElement).nodeName === 'INPUT' && key === 'text') {\n        (component as HTMLInputElement).value = domStyle[key] as string;\n      } else {\n        (component as HTMLElement).setAttribute(key, domStyle[key]);\n      }\n    } else {\n      (component.style as StyleProps)[key] = domStyle[key];\n    }\n  }\n};\n\nfunction isNativeProp(propName: string): boolean {\n  return !!PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST[propName];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}