{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport EventManager from './EventManager';\nimport { EventTypes } from '../interfaces';\nimport { PointerType } from '../../PointerType';\nexport default class WheelEventManager extends EventManager {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"wheelDelta\", {\n      x: 0,\n      y: 0\n    });\n    _defineProperty(this, \"resetDelta\", _event => {\n      this.wheelDelta = {\n        x: 0,\n        y: 0\n      };\n    });\n    _defineProperty(this, \"wheelCallback\", event => {\n      this.wheelDelta.x += event.deltaX;\n      this.wheelDelta.y += event.deltaY;\n      const adaptedEvent = this.mapEvent(event);\n      this.onWheel(adaptedEvent);\n    });\n  }\n  registerListeners() {\n    this.view.addEventListener('pointermove', this.resetDelta);\n    this.view.addEventListener('wheel', this.wheelCallback);\n  }\n  unregisterListeners() {\n    this.view.removeEventListener('pointermove', this.resetDelta);\n    this.view.removeEventListener('wheel', this.wheelCallback);\n  }\n  mapEvent(event) {\n    return {\n      x: event.clientX + this.wheelDelta.x,\n      y: event.clientY + this.wheelDelta.y,\n      offsetX: event.offsetX - event.deltaX,\n      offsetY: event.offsetY - event.deltaY,\n      pointerId: -1,\n      eventType: EventTypes.MOVE,\n      pointerType: PointerType.OTHER,\n      time: event.timeStamp,\n      wheelDeltaY: event.wheelDeltaY\n    };\n  }\n  resetManager() {\n    super.resetManager();\n  }\n}","map":{"version":3,"names":["EventManager","EventTypes","PointerType","WheelEventManager","constructor","args","_defineProperty","x","y","_event","wheelDelta","event","deltaX","deltaY","adaptedEvent","mapEvent","onWheel","registerListeners","view","addEventListener","resetDelta","wheelCallback","unregisterListeners","removeEventListener","clientX","clientY","offsetX","offsetY","pointerId","eventType","MOVE","pointerType","OTHER","time","timeStamp","wheelDeltaY","resetManager"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\WheelEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { AdaptedEvent, EventTypes } from '../interfaces';\nimport { PointerType } from '../../PointerType';\n\nexport default class WheelEventManager extends EventManager<HTMLElement> {\n  private wheelDelta = { x: 0, y: 0 };\n\n  private resetDelta = (_event: PointerEvent) => {\n    this.wheelDelta = { x: 0, y: 0 };\n  };\n\n  private wheelCallback = (event: WheelEvent) => {\n    this.wheelDelta.x += event.deltaX;\n    this.wheelDelta.y += event.deltaY;\n\n    const adaptedEvent = this.mapEvent(event);\n    this.onWheel(adaptedEvent);\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointermove', this.resetDelta);\n    this.view.addEventListener('wheel', this.wheelCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointermove', this.resetDelta);\n    this.view.removeEventListener('wheel', this.wheelCallback);\n  }\n\n  protected mapEvent(event: WheelEvent): AdaptedEvent {\n    return {\n      x: event.clientX + this.wheelDelta.x,\n      y: event.clientY + this.wheelDelta.y,\n      offsetX: event.offsetX - event.deltaX,\n      offsetY: event.offsetY - event.deltaY,\n      pointerId: -1,\n      eventType: EventTypes.MOVE,\n      pointerType: PointerType.OTHER,\n      time: event.timeStamp,\n      // @ts-ignore It does exist, but it's deprecated\n      wheelDeltaY: event.wheelDeltaY,\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAAuBC,UAAvB,QAAyC,eAAzC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,eAAe,MAAMC,iBAAN,SAAgCH,YAAhC,CAA0D;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,qBAClD;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX,CADkD;IAAAF,eAAA,qBAGjDG,MAAD,IAA0B;MAC7C,KAAKC,UAAL,GAAkB;QAAEH,CAAC,EAAE,CAAL;QAAQC,CAAC,EAAE;MAAX,CAAlB;IACD,CALsE;IAAAF,eAAA,wBAO9CK,KAAD,IAAuB;MAC7C,KAAKD,UAAL,CAAgBH,CAAhB,IAAqBI,KAAK,CAACC,MAA3B;MACA,KAAKF,UAAL,CAAgBF,CAAhB,IAAqBG,KAAK,CAACE,MAA3B;MAEA,MAAMC,YAAY,GAAG,KAAKC,QAAL,CAAcJ,KAAd,CAArB;MACA,KAAKK,OAAL,CAAaF,YAAb;IACD,CAbsE;EAAA;EAehEG,iBAAiBA,CAAA,EAAS;IAC/B,KAAKC,IAAL,CAAUC,gBAAV,CAA2B,aAA3B,EAA0C,KAAKC,UAA/C;IACA,KAAKF,IAAL,CAAUC,gBAAV,CAA2B,OAA3B,EAAoC,KAAKE,aAAzC;EACD;EAEMC,mBAAmBA,CAAA,EAAS;IACjC,KAAKJ,IAAL,CAAUK,mBAAV,CAA8B,aAA9B,EAA6C,KAAKH,UAAlD;IACA,KAAKF,IAAL,CAAUK,mBAAV,CAA8B,OAA9B,EAAuC,KAAKF,aAA5C;EACD;EAESN,QAAQA,CAACJ,KAAD,EAAkC;IAClD,OAAO;MACLJ,CAAC,EAAEI,KAAK,CAACa,OAAN,GAAgB,KAAKd,UAAL,CAAgBH,CAD9B;MAELC,CAAC,EAAEG,KAAK,CAACc,OAAN,GAAgB,KAAKf,UAAL,CAAgBF,CAF9B;MAGLkB,OAAO,EAAEf,KAAK,CAACe,OAAN,GAAgBf,KAAK,CAACC,MAH1B;MAILe,OAAO,EAAEhB,KAAK,CAACgB,OAAN,GAAgBhB,KAAK,CAACE,MAJ1B;MAKLe,SAAS,EAAE,CAAC,CALP;MAMLC,SAAS,EAAE5B,UAAU,CAAC6B,IANjB;MAOLC,WAAW,EAAE7B,WAAW,CAAC8B,KAPpB;MAQLC,IAAI,EAAEtB,KAAK,CAACuB,SARP;MAULC,WAAW,EAAExB,KAAK,CAACwB;IAVd,CAAP;EAYD;EAEMC,YAAYA,CAAA,EAAS;IAC1B,MAAMA,YAAN;EACD;AA1CsE","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}