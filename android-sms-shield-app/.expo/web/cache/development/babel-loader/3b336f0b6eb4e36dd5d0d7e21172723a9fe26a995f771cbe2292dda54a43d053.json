{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\src\\\\screens\\\\ScanScreen.tsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, Button, useTheme, RadioButton, ProgressBar, Chip } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { BlurView } from 'expo-blur';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as SMS from 'expo-sms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width,\n  height\n} = Dimensions.get('window');\nexport default function ScanScreen() {\n  const theme = useTheme();\n  const [selectedModel, setSelectedModel] = useState('tensorflow');\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [scanResults, setScanResults] = useState([]);\n  const [scanStats, setScanStats] = useState({\n    totalScanned: 0,\n    spamDetected: 0,\n    safeMessages: 0,\n    averageConfidence: 0\n  });\n  const models = [{\n    id: 'tensorflow',\n    name: 'TensorFlow Lite',\n    description: 'Advanced neural network model',\n    accuracy: '94.2%',\n    speed: 'Fast'\n  }, {\n    id: 'rule-based',\n    name: 'Rule-Based',\n    description: 'Keyword and pattern matching',\n    accuracy: '87.5%',\n    speed: 'Very Fast'\n  }, {\n    id: 'hybrid',\n    name: 'Hybrid Model',\n    description: 'Combines ML and rule-based',\n    accuracy: '96.1%',\n    speed: 'Medium'\n  }];\n  const sampleMessages = [{\n    id: '1',\n    message: 'Congratulations! You have won ₵50,000. Click here to claim your prize.',\n    isSpam: true,\n    confidence: 0.95,\n    category: 'FRAUD'\n  }, {\n    id: '2',\n    message: 'Your Bank of Ghana account has been suspended. Call +233-xxx-xxx to verify.',\n    isSpam: true,\n    confidence: 0.88,\n    category: 'PHISHING'\n  }, {\n    id: '3',\n    message: 'Your MTN mobile money transaction was successful. Amount: ₵100.00',\n    isSpam: false,\n    confidence: 0.92,\n    category: 'SAFE'\n  }, {\n    id: '4',\n    message: 'Free airtime! Send \"FREE\" to 1234 to get ₵5 airtime instantly.',\n    isSpam: true,\n    confidence: 0.76,\n    category: 'SPAM'\n  }];\n  const startScanning = async () => {\n    if (!(await SMS.isAvailableAsync())) {\n      Alert.alert('Error', 'SMS functionality is not available on this device');\n      return;\n    }\n    setIsScanning(true);\n    setScanProgress(0);\n    setScanResults([]);\n    for (let i = 0; i <= 100; i += 10) {\n      await new Promise(resolve => setTimeout(resolve, 200));\n      setScanProgress(i / 100);\n    }\n    const results = sampleMessages.map((msg, index) => Object.assign({}, msg, {\n      timestamp: Date.now() - index * 1000\n    }));\n    setScanResults(results);\n    const stats = {\n      totalScanned: results.length,\n      spamDetected: results.filter(r => r.isSpam).length,\n      safeMessages: results.filter(r => !r.isSpam).length,\n      averageConfidence: results.reduce((sum, r) => sum + r.confidence, 0) / results.length\n    };\n    setScanStats(stats);\n    setIsScanning(false);\n  };\n  const stopScanning = () => {\n    setIsScanning(false);\n    setScanProgress(0);\n  };\n  const getCategoryColor = category => {\n    switch (category) {\n      case 'FRAUD':\n        return theme.colors.error;\n      case 'PHISHING':\n        return '#FF9800';\n      case 'SPAM':\n        return '#9C27B0';\n      default:\n        return theme.colors.primary;\n    }\n  };\n  return _jsxDEV(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    children: [_jsxDEV(LinearGradient, {\n      colors: [theme.colors.primary, theme.colors.secondary],\n      style: styles.header,\n      children: _jsxDEV(BlurView, {\n        intensity: 20,\n        style: styles.headerContent,\n        children: [_jsxDEV(Ionicons, {\n          name: \"scan\",\n          size: 48,\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.headerTitle,\n          children: \"SMS Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.headerSubtitle,\n          children: \"AI-powered message analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.onBackground\n        }],\n        children: \"Select ML Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), models.map(model => _jsxDEV(Card, {\n        style: [styles.modelCard, {\n          backgroundColor: theme.colors.surface\n        }],\n        children: _jsxDEV(Card.Content, {\n          children: _jsxDEV(View, {\n            style: styles.modelContent,\n            children: [_jsxDEV(RadioButton, {\n              value: model.id,\n              status: selectedModel === model.id ? 'checked' : 'unchecked',\n              onPress: () => setSelectedModel(model.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), _jsxDEV(View, {\n              style: styles.modelInfo,\n              children: [_jsxDEV(Text, {\n                style: [styles.modelName, {\n                  color: theme.colors.onSurface\n                }],\n                children: model.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), _jsxDEV(Text, {\n                style: [styles.modelDescription, {\n                  color: theme.colors.onSurfaceVariant\n                }],\n                children: model.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this), _jsxDEV(View, {\n                style: styles.modelStats,\n                children: [_jsxDEV(Chip, {\n                  icon: \"check-circle\",\n                  style: styles.chip,\n                  children: [model.accuracy, \" accuracy\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), _jsxDEV(Chip, {\n                  icon: \"flash\",\n                  style: styles.chip,\n                  children: model.speed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, model.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.onBackground\n        }],\n        children: \"Scan Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), _jsxDEV(Card, {\n        style: [styles.controlCard, {\n          backgroundColor: theme.colors.surface\n        }],\n        children: _jsxDEV(Card.Content, {\n          children: isScanning ? _jsxDEV(View, {\n            children: [_jsxDEV(View, {\n              style: styles.progressContainer,\n              children: [_jsxDEV(Text, {\n                style: [styles.progressText, {\n                  color: theme.colors.onSurface\n                }],\n                children: [\"Scanning messages... \", Math.round(scanProgress * 100), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), _jsxDEV(ProgressBar, {\n                progress: scanProgress,\n                color: theme.colors.primary,\n                style: styles.progressBar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), _jsxDEV(Button, {\n              mode: \"outlined\",\n              onPress: stopScanning,\n              style: styles.stopButton,\n              icon: \"stop\",\n              children: \"Stop Scanning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this) : _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: startScanning,\n            style: styles.scanButton,\n            contentStyle: styles.scanButtonContent,\n            icon: \"play\",\n            children: \"Start Scanning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), scanStats.totalScanned > 0 && _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.onBackground\n        }],\n        children: \"Scan Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), _jsxDEV(View, {\n        style: styles.statsGrid,\n        children: [_jsxDEV(Card, {\n          style: [styles.statCard, {\n            backgroundColor: theme.colors.surface\n          }],\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              style: [styles.statNumber, {\n                color: theme.colors.onSurface\n              }],\n              children: scanStats.totalScanned\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: [styles.statLabel, {\n                color: theme.colors.onSurfaceVariant\n              }],\n              children: \"Total Scanned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), _jsxDEV(Card, {\n          style: [styles.statCard, {\n            backgroundColor: theme.colors.surface\n          }],\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              style: [styles.statNumber, {\n                color: theme.colors.error\n              }],\n              children: scanStats.spamDetected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: [styles.statLabel, {\n                color: theme.colors.onSurfaceVariant\n              }],\n              children: \"Spam Detected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), _jsxDEV(Card, {\n          style: [styles.statCard, {\n            backgroundColor: theme.colors.surface\n          }],\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              style: [styles.statNumber, {\n                color: theme.colors.primary\n              }],\n              children: scanStats.safeMessages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: [styles.statLabel, {\n                color: theme.colors.onSurfaceVariant\n              }],\n              children: \"Safe Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), _jsxDEV(Card, {\n          style: [styles.statCard, {\n            backgroundColor: theme.colors.surface\n          }],\n          children: _jsxDEV(Card.Content, {\n            children: [_jsxDEV(Text, {\n              style: [styles.statNumber, {\n                color: theme.colors.secondary\n              }],\n              children: [(scanStats.averageConfidence * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: [styles.statLabel, {\n                color: theme.colors.onSurfaceVariant\n              }],\n              children: \"Avg Confidence\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), scanResults.length > 0 && _jsxDEV(View, {\n      style: styles.section,\n      children: [_jsxDEV(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.onBackground\n        }],\n        children: \"Scan Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), scanResults.map(result => _jsxDEV(Card, {\n        style: [styles.resultCard, {\n          backgroundColor: theme.colors.surface\n        }],\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(View, {\n            style: styles.resultHeader,\n            children: [_jsxDEV(View, {\n              style: styles.resultStatus,\n              children: [_jsxDEV(Ionicons, {\n                name: result.isSpam ? 'warning' : 'checkmark-circle',\n                size: 20,\n                color: result.isSpam ? theme.colors.error : theme.colors.primary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: [styles.resultCategory, {\n                  color: getCategoryColor(result.category)\n                }],\n                children: result.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), _jsxDEV(Text, {\n              style: [styles.resultConfidence, {\n                color: theme.colors.onSurfaceVariant\n              }],\n              children: [(result.confidence * 100).toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: [styles.resultMessage, {\n              color: theme.colors.onSurface\n            }],\n            children: result.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), _jsxDEV(Text, {\n            style: [styles.resultTime, {\n              color: theme.colors.onSurfaceVariant\n            }],\n            children: new Date(result.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    height: height * 0.25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerContent: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  headerTitle: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: 'white',\n    marginTop: 10\n  },\n  headerSubtitle: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 5\n  },\n  section: {\n    padding: 20\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15\n  },\n  modelCard: {\n    marginBottom: 15,\n    elevation: 4\n  },\n  modelContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  modelInfo: {\n    flex: 1,\n    marginLeft: 10\n  },\n  modelName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 4\n  },\n  modelDescription: {\n    fontSize: 14,\n    marginBottom: 8\n  },\n  modelStats: {\n    flexDirection: 'row',\n    gap: 8\n  },\n  chip: {\n    height: 24\n  },\n  controlCard: {\n    elevation: 4\n  },\n  progressContainer: {\n    marginBottom: 20\n  },\n  progressText: {\n    fontSize: 16,\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  progressBar: {\n    height: 8,\n    borderRadius: 4\n  },\n  scanButton: {\n    borderRadius: 25,\n    elevation: 8\n  },\n  scanButtonContent: {\n    height: 50,\n    paddingHorizontal: 30\n  },\n  stopButton: {\n    borderRadius: 25,\n    marginTop: 10\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  statCard: {\n    width: '48%',\n    marginBottom: 10,\n    elevation: 4\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  statLabel: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginTop: 4\n  },\n  resultCard: {\n    marginBottom: 10,\n    elevation: 2\n  },\n  resultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  resultStatus: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  resultCategory: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginLeft: 8\n  },\n  resultConfidence: {\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  resultMessage: {\n    fontSize: 14,\n    lineHeight: 20,\n    marginBottom: 8\n  },\n  resultTime: {\n    fontSize: 12\n  }\n});","map":{"version":3,"names":["React","useState","View","ScrollView","StyleSheet","Dimensions","Alert","Text","Card","Button","useTheme","RadioButton","ProgressBar","Chip","LinearGradient","BlurView","Ionicons","SMS","jsxDEV","_jsxDEV","width","height","get","ScanScreen","theme","selectedModel","setSelectedModel","isScanning","setIsScanning","scanProgress","setScanProgress","scanResults","setScanResults","scanStats","setScanStats","totalScanned","spamDetected","safeMessages","averageConfidence","models","id","name","description","accuracy","speed","sampleMessages","message","isSpam","confidence","category","startScanning","isAvailableAsync","alert","i","Promise","resolve","setTimeout","results","map","msg","index","Object","assign","timestamp","Date","now","stats","length","filter","r","reduce","sum","stopScanning","getCategoryColor","colors","error","primary","style","styles","container","backgroundColor","background","children","secondary","header","intensity","headerContent","size","color","fileName","_jsxFileName","lineNumber","columnNumber","headerTitle","headerSubtitle","section","sectionTitle","onBackground","model","modelCard","surface","Content","modelContent","value","status","onPress","modelInfo","modelName","onSurface","modelDescription","onSurfaceVariant","modelStats","icon","chip","controlCard","progressContainer","progressText","Math","round","progress","progressBar","mode","stopButton","scanButton","contentStyle","scanButtonContent","statsGrid","statCard","statNumber","statLabel","toFixed","result","resultCard","resultHeader","resultStatus","resultCategory","resultConfidence","resultMessage","resultTime","toLocaleTimeString","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginTop","marginBottom","elevation","flexDirection","marginLeft","gap","textAlign","borderRadius","paddingHorizontal","flexWrap","lineHeight"],"sources":["C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/src/screens/ScanScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Alert,\r\n} from 'react-native';\r\nimport {\r\n  Text,\r\n  Card,\r\n  Button,\r\n  useTheme,\r\n  RadioButton,\r\n  ProgressBar,\r\n  Chip,\r\n  List,\r\n} from 'react-native-paper';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { BlurView } from 'expo-blur';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as SMS from 'expo-sms';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\ninterface ScanResult {\r\n  id: string;\r\n  message: string;\r\n  isSpam: boolean;\r\n  confidence: number;\r\n  category: string;\r\n  timestamp: number;\r\n}\r\n\r\nexport default function ScanScreen() {\r\n  const theme = useTheme();\r\n  const [selectedModel, setSelectedModel] = useState('tensorflow');\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [scanProgress, setScanProgress] = useState(0);\r\n  const [scanResults, setScanResults] = useState<ScanResult[]>([]);\r\n  const [scanStats, setScanStats] = useState({\r\n    totalScanned: 0,\r\n    spamDetected: 0,\r\n    safeMessages: 0,\r\n    averageConfidence: 0,\r\n  });\r\n\r\n  const models = [\r\n    {\r\n      id: 'tensorflow',\r\n      name: 'TensorFlow Lite',\r\n      description: 'Advanced neural network model',\r\n      accuracy: '94.2%',\r\n      speed: 'Fast',\r\n    },\r\n    {\r\n      id: 'rule-based',\r\n      name: 'Rule-Based',\r\n      description: 'Keyword and pattern matching',\r\n      accuracy: '87.5%',\r\n      speed: 'Very Fast',\r\n    },\r\n    {\r\n      id: 'hybrid',\r\n      name: 'Hybrid Model',\r\n      description: 'Combines ML and rule-based',\r\n      accuracy: '96.1%',\r\n      speed: 'Medium',\r\n    },\r\n  ];\r\n\r\n  const sampleMessages = [\r\n    {\r\n      id: '1',\r\n      message: 'Congratulations! You have won ₵50,000. Click here to claim your prize.',\r\n      isSpam: true,\r\n      confidence: 0.95,\r\n      category: 'FRAUD',\r\n    },\r\n    {\r\n      id: '2',\r\n      message: 'Your Bank of Ghana account has been suspended. Call +233-xxx-xxx to verify.',\r\n      isSpam: true,\r\n      confidence: 0.88,\r\n      category: 'PHISHING',\r\n    },\r\n    {\r\n      id: '3',\r\n      message: 'Your MTN mobile money transaction was successful. Amount: ₵100.00',\r\n      isSpam: false,\r\n      confidence: 0.92,\r\n      category: 'SAFE',\r\n    },\r\n    {\r\n      id: '4',\r\n      message: 'Free airtime! Send \"FREE\" to 1234 to get ₵5 airtime instantly.',\r\n      isSpam: true,\r\n      confidence: 0.76,\r\n      category: 'SPAM',\r\n    },\r\n  ];\r\n\r\n  const startScanning = async () => {\r\n    if (!(await SMS.isAvailableAsync())) {\r\n      Alert.alert('Error', 'SMS functionality is not available on this device');\r\n      return;\r\n    }\r\n\r\n    setIsScanning(true);\r\n    setScanProgress(0);\r\n    setScanResults([]);\r\n\r\n    // Simulate scanning process\r\n    for (let i = 0; i <= 100; i += 10) {\r\n      await new Promise(resolve => setTimeout(resolve, 200));\r\n      setScanProgress(i / 100);\r\n    }\r\n\r\n    // Simulate results\r\n    const results = sampleMessages.map((msg, index) => ({\r\n      ...msg,\r\n      timestamp: Date.now() - (index * 1000),\r\n    }));\r\n\r\n    setScanResults(results);\r\n    \r\n    const stats = {\r\n      totalScanned: results.length,\r\n      spamDetected: results.filter(r => r.isSpam).length,\r\n      safeMessages: results.filter(r => !r.isSpam).length,\r\n      averageConfidence: results.reduce((sum, r) => sum + r.confidence, 0) / results.length,\r\n    };\r\n    \r\n    setScanStats(stats);\r\n    setIsScanning(false);\r\n  };\r\n\r\n  const stopScanning = () => {\r\n    setIsScanning(false);\r\n    setScanProgress(0);\r\n  };\r\n\r\n  const getCategoryColor = (category: string) => {\r\n    switch (category) {\r\n      case 'FRAUD':\r\n        return theme.colors.error;\r\n      case 'PHISHING':\r\n        return '#FF9800';\r\n      case 'SPAM':\r\n        return '#9C27B0';\r\n      default:\r\n        return theme.colors.primary;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={[styles.container, { backgroundColor: theme.colors.background }]}>\r\n      {/* Header */}\r\n      <LinearGradient\r\n        colors={[theme.colors.primary, theme.colors.secondary]}\r\n        style={styles.header}\r\n      >\r\n        <BlurView intensity={20} style={styles.headerContent}>\r\n          <Ionicons name=\"scan\" size={48} color=\"white\" />\r\n          <Text style={styles.headerTitle}>SMS Scanner</Text>\r\n          <Text style={styles.headerSubtitle}>AI-powered message analysis</Text>\r\n        </BlurView>\r\n      </LinearGradient>\r\n\r\n      {/* Model Selection */}\r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.onBackground }]}>\r\n          Select ML Model\r\n        </Text>\r\n        {models.map((model) => (\r\n          <Card key={model.id} style={[styles.modelCard, { backgroundColor: theme.colors.surface }]}>\r\n            <Card.Content>\r\n              <View style={styles.modelContent}>\r\n                <RadioButton\r\n                  value={model.id}\r\n                  status={selectedModel === model.id ? 'checked' : 'unchecked'}\r\n                  onPress={() => setSelectedModel(model.id)}\r\n                />\r\n                <View style={styles.modelInfo}>\r\n                  <Text style={[styles.modelName, { color: theme.colors.onSurface }]}>\r\n                    {model.name}\r\n                  </Text>\r\n                  <Text style={[styles.modelDescription, { color: theme.colors.onSurfaceVariant }]}>\r\n                    {model.description}\r\n                  </Text>\r\n                  <View style={styles.modelStats}>\r\n                    <Chip icon=\"check-circle\" style={styles.chip}>\r\n                      {model.accuracy} accuracy\r\n                    </Chip>\r\n                    <Chip icon=\"flash\" style={styles.chip}>\r\n                      {model.speed}\r\n                    </Chip>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </Card.Content>\r\n          </Card>\r\n        ))}\r\n      </View>\r\n\r\n      {/* Scan Controls */}\r\n      <View style={styles.section}>\r\n        <Text style={[styles.sectionTitle, { color: theme.colors.onBackground }]}>\r\n          Scan Controls\r\n        </Text>\r\n        <Card style={[styles.controlCard, { backgroundColor: theme.colors.surface }]}>\r\n          <Card.Content>\r\n            {isScanning ? (\r\n              <View>\r\n                <View style={styles.progressContainer}>\r\n                  <Text style={[styles.progressText, { color: theme.colors.onSurface }]}>\r\n                    Scanning messages... {Math.round(scanProgress * 100)}%\r\n                  </Text>\r\n                  <ProgressBar \r\n                    progress={scanProgress} \r\n                    color={theme.colors.primary}\r\n                    style={styles.progressBar}\r\n                  />\r\n                </View>\r\n                <Button\r\n                  mode=\"outlined\"\r\n                  onPress={stopScanning}\r\n                  style={styles.stopButton}\r\n                  icon=\"stop\"\r\n                >\r\n                  Stop Scanning\r\n                </Button>\r\n              </View>\r\n            ) : (\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={startScanning}\r\n                style={styles.scanButton}\r\n                contentStyle={styles.scanButtonContent}\r\n                icon=\"play\"\r\n              >\r\n                Start Scanning\r\n              </Button>\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n      </View>\r\n\r\n      {/* Scan Statistics */}\r\n      {scanStats.totalScanned > 0 && (\r\n        <View style={styles.section}>\r\n          <Text style={[styles.sectionTitle, { color: theme.colors.onBackground }]}>\r\n            Scan Statistics\r\n          </Text>\r\n          <View style={styles.statsGrid}>\r\n            <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>\r\n              <Card.Content>\r\n                <Text style={[styles.statNumber, { color: theme.colors.onSurface }]}>\r\n                  {scanStats.totalScanned}\r\n                </Text>\r\n                <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>\r\n                  Total Scanned\r\n                </Text>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>\r\n              <Card.Content>\r\n                <Text style={[styles.statNumber, { color: theme.colors.error }]}>\r\n                  {scanStats.spamDetected}\r\n                </Text>\r\n                <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>\r\n                  Spam Detected\r\n                </Text>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>\r\n              <Card.Content>\r\n                <Text style={[styles.statNumber, { color: theme.colors.primary }]}>\r\n                  {scanStats.safeMessages}\r\n                </Text>\r\n                <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>\r\n                  Safe Messages\r\n                </Text>\r\n              </Card.Content>\r\n            </Card>\r\n            <Card style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>\r\n              <Card.Content>\r\n                <Text style={[styles.statNumber, { color: theme.colors.secondary }]}>\r\n                  {(scanStats.averageConfidence * 100).toFixed(1)}%\r\n                </Text>\r\n                <Text style={[styles.statLabel, { color: theme.colors.onSurfaceVariant }]}>\r\n                  Avg Confidence\r\n                </Text>\r\n              </Card.Content>\r\n            </Card>\r\n          </View>\r\n        </View>\r\n      )}\r\n\r\n      {/* Real-time Results */}\r\n      {scanResults.length > 0 && (\r\n        <View style={styles.section}>\r\n          <Text style={[styles.sectionTitle, { color: theme.colors.onBackground }]}>\r\n            Scan Results\r\n          </Text>\r\n          {scanResults.map((result) => (\r\n            <Card key={result.id} style={[styles.resultCard, { backgroundColor: theme.colors.surface }]}>\r\n              <Card.Content>\r\n                <View style={styles.resultHeader}>\r\n                  <View style={styles.resultStatus}>\r\n                    <Ionicons \r\n                      name={result.isSpam ? 'warning' : 'checkmark-circle'} \r\n                      size={20} \r\n                      color={result.isSpam ? theme.colors.error : theme.colors.primary} \r\n                    />\r\n                    <Text style={[\r\n                      styles.resultCategory,\r\n                      { color: getCategoryColor(result.category) }\r\n                    ]}>\r\n                      {result.category}\r\n                    </Text>\r\n                  </View>\r\n                  <Text style={[styles.resultConfidence, { color: theme.colors.onSurfaceVariant }]}>\r\n                    {(result.confidence * 100).toFixed(1)}%\r\n                  </Text>\r\n                </View>\r\n                <Text style={[styles.resultMessage, { color: theme.colors.onSurface }]}>\r\n                  {result.message}\r\n                </Text>\r\n                <Text style={[styles.resultTime, { color: theme.colors.onSurfaceVariant }]}>\r\n                  {new Date(result.timestamp).toLocaleTimeString()}\r\n                </Text>\r\n              </Card.Content>\r\n            </Card>\r\n          ))}\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    height: height * 0.25,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  headerContent: {\r\n    flex: 1,\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  headerTitle: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginTop: 10,\r\n  },\r\n  headerSubtitle: {\r\n    fontSize: 16,\r\n    color: 'rgba(255, 255, 255, 0.8)',\r\n    marginTop: 5,\r\n  },\r\n  section: {\r\n    padding: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n  },\r\n  modelCard: {\r\n    marginBottom: 15,\r\n    elevation: 4,\r\n  },\r\n  modelContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  modelInfo: {\r\n    flex: 1,\r\n    marginLeft: 10,\r\n  },\r\n  modelName: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 4,\r\n  },\r\n  modelDescription: {\r\n    fontSize: 14,\r\n    marginBottom: 8,\r\n  },\r\n  modelStats: {\r\n    flexDirection: 'row',\r\n    gap: 8,\r\n  },\r\n  chip: {\r\n    height: 24,\r\n  },\r\n  controlCard: {\r\n    elevation: 4,\r\n  },\r\n  progressContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  progressText: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  progressBar: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  scanButton: {\r\n    borderRadius: 25,\r\n    elevation: 8,\r\n  },\r\n  scanButtonContent: {\r\n    height: 50,\r\n    paddingHorizontal: 30,\r\n  },\r\n  stopButton: {\r\n    borderRadius: 25,\r\n    marginTop: 10,\r\n  },\r\n  statsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  statCard: {\r\n    width: '48%',\r\n    marginBottom: 10,\r\n    elevation: 4,\r\n  },\r\n  statNumber: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n    marginTop: 4,\r\n  },\r\n  resultCard: {\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  resultHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  resultStatus: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  resultCategory: {\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    marginLeft: 8,\r\n  },\r\n  resultConfidence: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n  },\r\n  resultMessage: {\r\n    fontSize: 14,\r\n    lineHeight: 20,\r\n    marginBottom: 8,\r\n  },\r\n  resultTime: {\r\n    fontSize: 12,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}