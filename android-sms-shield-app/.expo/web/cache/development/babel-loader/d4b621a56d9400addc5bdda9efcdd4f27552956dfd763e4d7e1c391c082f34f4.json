{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport GestureHandler from './GestureHandler';\nimport RotationGestureDetector from '../detectors/RotationGestureDetector';\nconst ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\nexport default class RotationGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"rotation\", 0);\n    _defineProperty(this, \"velocity\", 0);\n    _defineProperty(this, \"cachedAnchorX\", 0);\n    _defineProperty(this, \"cachedAnchorY\", 0);\n    _defineProperty(this, \"rotationGestureListener\", {\n      onRotationBegin: _detector => true,\n      onRotation: detector => {\n        const previousRotation = this.rotation;\n        this.rotation += detector.rotation;\n        const delta = detector.timeDelta;\n        if (delta > 0) {\n          this.velocity = (this.rotation - previousRotation) / delta;\n        }\n        if (Math.abs(this.rotation) >= ROTATION_RECOGNITION_THRESHOLD && this.state === State.BEGAN) {\n          this.activate();\n        }\n        return true;\n      },\n      onRotationEnd: _detector => {\n        this.end();\n      }\n    });\n    _defineProperty(this, \"rotationGestureDetector\", new RotationGestureDetector(this.rotationGestureListener));\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n    this.shouldCancelWhenOutside = false;\n  }\n  transformNativeEvent() {\n    return {\n      rotation: this.rotation ? this.rotation : 0,\n      anchorX: this.getAnchorX(),\n      anchorY: this.getAnchorY(),\n      velocity: this.velocity ? this.velocity : 0\n    };\n  }\n  getAnchorX() {\n    const anchorX = this.rotationGestureDetector.anchorX;\n    return anchorX ? anchorX : this.cachedAnchorX;\n  }\n  getAnchorY() {\n    const anchorY = this.rotationGestureDetector.anchorY;\n    return anchorY ? anchorY : this.cachedAnchorY;\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.tryToSendTouchEvent(event);\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n  }\n  onPointerMove(event) {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n    this.tracker.track(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n    this.tracker.track(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n  tryBegin() {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n    this.begin();\n  }\n  onReset() {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.rotation = 0;\n    this.velocity = 0;\n    this.rotationGestureDetector.reset();\n  }\n}","map":{"version":3,"names":["State","GestureHandler","RotationGestureDetector","ROTATION_RECOGNITION_THRESHOLD","Math","PI","RotationGestureHandler","constructor","args","_defineProperty","onRotationBegin","_detector","onRotation","detector","previousRotation","rotation","delta","timeDelta","velocity","abs","state","BEGAN","activate","onRotationEnd","end","rotationGestureListener","init","ref","propsRef","shouldCancelWhenOutside","transformNativeEvent","anchorX","getAnchorX","anchorY","getAnchorY","rotationGestureDetector","cachedAnchorX","cachedAnchorY","onPointerDown","event","tracker","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerMove","trackedPointersCount","track","onPointerOutOfBounds","onPointerUp","removeFromTracker","pointerId","ACTIVE","fail","onPointerRemove","UNDETERMINED","begin","onReset","reset"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\RotationGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport RotationGestureDetector, {\n  RotationGestureListener,\n} from '../detectors/RotationGestureDetector';\n\nconst ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\n\nexport default class RotationGestureHandler extends GestureHandler {\n  private rotation = 0;\n  private velocity = 0;\n\n  private cachedAnchorX = 0;\n  private cachedAnchorY = 0;\n\n  private rotationGestureListener: RotationGestureListener = {\n    onRotationBegin: (_detector: RotationGestureDetector): boolean => true,\n    onRotation: (detector: RotationGestureDetector): boolean => {\n      const previousRotation: number = this.rotation;\n      this.rotation += detector.rotation;\n\n      const delta = detector.timeDelta;\n\n      if (delta > 0) {\n        this.velocity = (this.rotation - previousRotation) / delta;\n      }\n\n      if (\n        Math.abs(this.rotation) >= ROTATION_RECOGNITION_THRESHOLD &&\n        this.state === State.BEGAN\n      ) {\n        this.activate();\n      }\n\n      return true;\n    },\n    onRotationEnd: (_detector: RotationGestureDetector): void => {\n      this.end();\n    },\n  };\n\n  private rotationGestureDetector: RotationGestureDetector =\n    new RotationGestureDetector(this.rotationGestureListener);\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = false;\n  }\n\n  protected transformNativeEvent() {\n    return {\n      rotation: this.rotation ? this.rotation : 0,\n      anchorX: this.getAnchorX(),\n      anchorY: this.getAnchorY(),\n      velocity: this.velocity ? this.velocity : 0,\n    };\n  }\n\n  public getAnchorX(): number {\n    const anchorX = this.rotationGestureDetector.anchorX;\n\n    return anchorX ? anchorX : this.cachedAnchorX;\n  }\n\n  public getAnchorY(): number {\n    const anchorY = this.rotationGestureDetector.anchorY;\n\n    return anchorY ? anchorY : this.cachedAnchorY;\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n\n    this.tryBegin();\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n\n    this.tracker.track(event);\n\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n\n    this.tracker.track(event);\n\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  protected tryBegin(): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n  }\n\n  protected onReset(): void {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n\n    this.rotation = 0;\n    this.velocity = 0;\n    this.rotationGestureDetector.reset();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}