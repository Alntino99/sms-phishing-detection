{"ast":null,"code":"'use strict';\n\nimport { LayoutAnimationType, ReduceMotion } from \"../../commonTypes.js\";\nimport { EasingNameSymbol } from \"../../Easing.js\";\nimport { logger } from \"../../logger/index.js\";\nimport { _updatePropsJS } from \"../../ReanimatedModule/js-reanimated/index.js\";\nimport { ReducedMotionManager } from \"../../ReducedMotion.js\";\nimport { Keyframe } from \"../animationBuilder/index.js\";\nimport { setElementPosition, snapshots } from \"./componentStyle.js\";\nimport { Animations, TransitionType } from \"./config.js\";\nimport { TransitionGenerator } from \"./createAnimation.js\";\nimport { scheduleAnimationCleanup } from \"./domUtils.js\";\nimport { getEasingByName, WebEasings } from \"./Easing.web.js\";\nimport { prepareCurvedTransition } from \"./transition/Curved.web.js\";\nfunction getEasingFromConfig(config) {\n  if (!config.easingV) {\n    return getEasingByName('linear');\n  }\n  const easingName = config.easingV[EasingNameSymbol];\n  if (!(easingName in WebEasings)) {\n    logger.warn(`Selected easing is not currently supported on web.`);\n    return getEasingByName('linear');\n  }\n  return getEasingByName(easingName);\n}\nfunction getRandomDelay(maxDelay = 1000) {\n  return Math.floor(Math.random() * (maxDelay + 1)) / 1000;\n}\nfunction getDelayFromConfig(config) {\n  const shouldRandomizeDelay = config.randomizeDelay;\n  const delay = shouldRandomizeDelay ? getRandomDelay() : 0;\n  if (!config.delayV) {\n    return delay;\n  }\n  return shouldRandomizeDelay ? getRandomDelay(config.delayV) : config.delayV / 1000;\n}\nexport function getReducedMotionFromConfig(config) {\n  if (!config.reduceMotionV) {\n    return ReducedMotionManager.jsValue;\n  }\n  switch (config.reduceMotionV) {\n    case ReduceMotion.Never:\n      return false;\n    case ReduceMotion.Always:\n      return true;\n    default:\n      return ReducedMotionManager.jsValue;\n  }\n}\nfunction getDurationFromConfig(config, animationName) {\n  const defaultDuration = animationName in Animations ? Animations[animationName].duration : 0.3;\n  return config.durationV !== undefined ? config.durationV / 1000 : defaultDuration;\n}\nfunction getCallbackFromConfig(config) {\n  return config.callbackV !== undefined ? config.callbackV : null;\n}\nfunction getReversedFromConfig(config) {\n  return !!config.reversed;\n}\nexport function getProcessedConfig(animationName, animationType, config) {\n  return {\n    animationName,\n    animationType,\n    duration: getDurationFromConfig(config, animationName),\n    delay: getDelayFromConfig(config),\n    easing: getEasingFromConfig(config),\n    callback: getCallbackFromConfig(config),\n    reversed: getReversedFromConfig(config)\n  };\n}\nexport function maybeModifyStyleForKeyframe(element, config) {\n  if (!(config instanceof Keyframe)) {\n    return;\n  }\n  element.style.animationFillMode = 'forwards';\n  for (const timestampRules of Object.values(config.definitions)) {\n    if ('originX' in timestampRules || 'originY' in timestampRules) {\n      element.style.position = 'absolute';\n      return;\n    }\n  }\n}\nexport function saveSnapshot(element) {\n  const rect = element.getBoundingClientRect();\n  const snapshot = {\n    top: rect.top,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    scrollOffsets: getElementScrollValue(element)\n  };\n  snapshots.set(element, snapshot);\n}\nexport function setElementAnimation(element, animationConfig, shouldSavePosition = false, parent = null) {\n  const {\n    animationName,\n    duration,\n    delay,\n    easing\n  } = animationConfig;\n  const configureAnimation = () => {\n    element.style.animationName = animationName;\n    element.style.animationDuration = `${duration}s`;\n    element.style.animationDelay = `${delay}s`;\n    element.style.animationTimingFunction = easing;\n  };\n  if (animationConfig.animationType === LayoutAnimationType.ENTERING) {\n    requestAnimationFrame(configureAnimation);\n  } else {\n    configureAnimation();\n  }\n  element.onanimationend = () => {\n    if (shouldSavePosition) {\n      saveSnapshot(element);\n    }\n    if (parent?.contains(element)) {\n      element.removedAfterAnimation = true;\n      parent.removeChild(element);\n    }\n    animationConfig.callback?.(true);\n    element.removeEventListener('animationcancel', animationCancelHandler);\n  };\n  const animationCancelHandler = () => {\n    animationConfig.callback?.(false);\n    if (parent?.contains(element)) {\n      element.removedAfterAnimation = true;\n      parent.removeChild(element);\n    }\n    element.removeEventListener('animationcancel', animationCancelHandler);\n  };\n  element.onanimationstart = () => {\n    if (animationConfig.animationType === LayoutAnimationType.ENTERING) {\n      _updatePropsJS({\n        visibility: 'initial'\n      }, element);\n    }\n    element.addEventListener('animationcancel', animationCancelHandler);\n  };\n  if (!(animationName in Animations)) {\n    scheduleAnimationCleanup(animationName, duration + delay, () => {\n      if (shouldSavePosition) {\n        setElementPosition(element, snapshots.get(element));\n      }\n    });\n  }\n}\nexport function handleLayoutTransition(element, animationConfig, transitionData) {\n  const {\n    animationName\n  } = animationConfig;\n  let animationType;\n  switch (animationName) {\n    case 'LinearTransition':\n      animationType = TransitionType.LINEAR;\n      break;\n    case 'SequencedTransition':\n      animationType = TransitionType.SEQUENCED;\n      break;\n    case 'FadingTransition':\n      animationType = TransitionType.FADING;\n      break;\n    case 'JumpingTransition':\n      animationType = TransitionType.JUMPING;\n      break;\n    case 'CurvedTransition':\n      animationType = TransitionType.CURVED;\n      break;\n    case 'EntryExitTransition':\n      animationType = TransitionType.ENTRY_EXIT;\n      break;\n    default:\n      animationType = TransitionType.LINEAR;\n      break;\n  }\n  const {\n    transitionKeyframeName,\n    dummyTransitionKeyframeName\n  } = TransitionGenerator(animationType, transitionData);\n  animationConfig.animationName = transitionKeyframeName;\n  if (animationType === TransitionType.CURVED) {\n    const {\n      dummy,\n      dummyAnimationConfig\n    } = prepareCurvedTransition(element, animationConfig, transitionData, dummyTransitionKeyframeName);\n    setElementAnimation(dummy, dummyAnimationConfig);\n  }\n  setElementAnimation(element, animationConfig);\n}\nfunction getElementScrollValue(element) {\n  let current = element;\n  const scrollOffsets = {\n    scrollTopOffset: 0,\n    scrollLeftOffset: 0\n  };\n  while (current) {\n    if (current.scrollTop !== 0 && scrollOffsets.scrollTopOffset === 0) {\n      scrollOffsets.scrollTopOffset = current.scrollTop;\n    }\n    if (current.scrollLeft !== 0 && scrollOffsets.scrollLeftOffset === 0) {\n      scrollOffsets.scrollLeftOffset = current.scrollLeft;\n    }\n    current = current.parentElement;\n  }\n  return scrollOffsets;\n}\nexport function handleExitingAnimation(element, animationConfig) {\n  const parent = element.offsetParent;\n  const dummy = element.cloneNode();\n  dummy.reanimatedDummy = true;\n  element.style.animationName = '';\n  dummy.style.animationName = '';\n  while (element.firstChild) {\n    dummy.appendChild(element.firstChild);\n  }\n  parent?.appendChild(dummy);\n  const snapshot = snapshots.get(element);\n  const scrollOffsets = getElementScrollValue(element);\n  const currentScrollTopOffset = scrollOffsets.scrollTopOffset;\n  const lastScrollTopOffset = snapshot.scrollOffsets.scrollTopOffset;\n  if (currentScrollTopOffset !== lastScrollTopOffset) {\n    snapshot.top += lastScrollTopOffset - currentScrollTopOffset;\n  }\n  const currentScrollLeftOffset = scrollOffsets.scrollLeftOffset;\n  const lastScrollLeftOffset = snapshot.scrollOffsets.scrollLeftOffset;\n  if (currentScrollLeftOffset !== lastScrollLeftOffset) {\n    snapshot.left += lastScrollLeftOffset - currentScrollLeftOffset;\n  }\n  snapshots.set(dummy, snapshot);\n  setElementPosition(dummy, snapshot);\n  setElementAnimation(dummy, animationConfig, false, parent);\n}","map":{"version":3,"names":["LayoutAnimationType","ReduceMotion","EasingNameSymbol","logger","_updatePropsJS","ReducedMotionManager","Keyframe","setElementPosition","snapshots","Animations","TransitionType","TransitionGenerator","scheduleAnimationCleanup","getEasingByName","WebEasings","prepareCurvedTransition","getEasingFromConfig","config","easingV","easingName","warn","getRandomDelay","maxDelay","Math","floor","random","getDelayFromConfig","shouldRandomizeDelay","randomizeDelay","delay","delayV","getReducedMotionFromConfig","reduceMotionV","jsValue","Never","Always","getDurationFromConfig","animationName","defaultDuration","duration","durationV","undefined","getCallbackFromConfig","callbackV","getReversedFromConfig","reversed","getProcessedConfig","animationType","easing","callback","maybeModifyStyleForKeyframe","element","style","animationFillMode","timestampRules","Object","values","definitions","position","saveSnapshot","rect","getBoundingClientRect","snapshot","top","left","width","height","scrollOffsets","getElementScrollValue","set","setElementAnimation","animationConfig","shouldSavePosition","parent","configureAnimation","animationDuration","animationDelay","animationTimingFunction","ENTERING","requestAnimationFrame","onanimationend","contains","removedAfterAnimation","removeChild","removeEventListener","animationCancelHandler","onanimationstart","visibility","addEventListener","get","handleLayoutTransition","transitionData","LINEAR","SEQUENCED","FADING","JUMPING","CURVED","ENTRY_EXIT","transitionKeyframeName","dummyTransitionKeyframeName","dummy","dummyAnimationConfig","current","scrollTopOffset","scrollLeftOffset","scrollTop","scrollLeft","parentElement","handleExitingAnimation","offsetParent","cloneNode","reanimatedDummy","firstChild","appendChild","currentScrollTopOffset","lastScrollTopOffset","currentScrollLeftOffset","lastScrollLeftOffset"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\web\\componentUtils.ts"],"sourcesContent":["'use strict';\n\nimport { LayoutAnimationType, ReduceMotion } from '../../commonTypes';\nimport { EasingNameSymbol } from '../../Easing';\nimport { logger } from '../../logger';\nimport type { ReanimatedHTMLElement } from '../../ReanimatedModule/js-reanimated';\nimport { _updatePropsJS } from '../../ReanimatedModule/js-reanimated';\nimport { ReducedMotionManager } from '../../ReducedMotion';\nimport { Keyframe } from '../animationBuilder';\nimport type { TransitionData } from './animationParser';\nimport type { ReanimatedSnapshot, ScrollOffsets } from './componentStyle';\nimport { setElementPosition, snapshots } from './componentStyle';\nimport type {\n  AnimationCallback,\n  AnimationConfig,\n  AnimationNames,\n  CustomConfig,\n  KeyframeDefinitions,\n} from './config';\nimport { Animations, TransitionType } from './config';\nimport { TransitionGenerator } from './createAnimation';\nimport { scheduleAnimationCleanup } from './domUtils';\nimport type { WebEasingsNames } from './Easing.web';\nimport { getEasingByName, WebEasings } from './Easing.web';\nimport { prepareCurvedTransition } from './transition/Curved.web';\n\nfunction getEasingFromConfig(config: CustomConfig): string {\n  if (!config.easingV) {\n    return getEasingByName('linear');\n  }\n\n  const easingName = config.easingV[EasingNameSymbol];\n\n  if (!(easingName in WebEasings)) {\n    logger.warn(`Selected easing is not currently supported on web.`);\n\n    return getEasingByName('linear');\n  }\n\n  return getEasingByName(easingName as WebEasingsNames);\n}\n\nfunction getRandomDelay(maxDelay = 1000) {\n  return Math.floor(Math.random() * (maxDelay + 1)) / 1000;\n}\n\nfunction getDelayFromConfig(config: CustomConfig): number {\n  const shouldRandomizeDelay = config.randomizeDelay;\n\n  const delay = shouldRandomizeDelay ? getRandomDelay() : 0;\n\n  if (!config.delayV) {\n    return delay;\n  }\n\n  return shouldRandomizeDelay\n    ? getRandomDelay(config.delayV)\n    : config.delayV / 1000;\n}\n\nexport function getReducedMotionFromConfig(config: CustomConfig) {\n  if (!config.reduceMotionV) {\n    return ReducedMotionManager.jsValue;\n  }\n\n  switch (config.reduceMotionV) {\n    case ReduceMotion.Never:\n      return false;\n    case ReduceMotion.Always:\n      return true;\n    default:\n      return ReducedMotionManager.jsValue;\n  }\n}\n\nfunction getDurationFromConfig(\n  config: CustomConfig,\n  animationName: string\n): number {\n  // Duration in keyframe has to be in seconds. However, when using `.duration()` modifier we pass it in miliseconds.\n  // If `duration` was specified in config, we have to divide it by `1000`, otherwise we return value that is already in seconds.\n\n  const defaultDuration =\n    animationName in Animations\n      ? Animations[animationName as AnimationNames].duration\n      : 0.3;\n\n  return config.durationV !== undefined\n    ? config.durationV / 1000\n    : defaultDuration;\n}\n\nfunction getCallbackFromConfig(config: CustomConfig): AnimationCallback {\n  return config.callbackV !== undefined ? config.callbackV : null;\n}\n\nfunction getReversedFromConfig(config: CustomConfig) {\n  return !!config.reversed;\n}\n\nexport function getProcessedConfig(\n  animationName: string,\n  animationType: LayoutAnimationType,\n  config: CustomConfig\n): AnimationConfig {\n  return {\n    animationName,\n    animationType,\n    duration: getDurationFromConfig(config, animationName),\n    delay: getDelayFromConfig(config),\n    easing: getEasingFromConfig(config),\n    callback: getCallbackFromConfig(config),\n    reversed: getReversedFromConfig(config),\n  };\n}\n\nexport function maybeModifyStyleForKeyframe(\n  element: HTMLElement,\n  config: CustomConfig\n) {\n  if (!(config instanceof Keyframe)) {\n    return;\n  }\n\n  // We need to set `animationFillMode` to `forwards`, otherwise component will go back to its position.\n  // This will result in wrong snapshot\n  element.style.animationFillMode = 'forwards';\n\n  for (const timestampRules of Object.values(\n    config.definitions as KeyframeDefinitions\n  )) {\n    if ('originX' in timestampRules || 'originY' in timestampRules) {\n      element.style.position = 'absolute';\n      return;\n    }\n  }\n}\n\nexport function saveSnapshot(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n\n  const snapshot: ReanimatedSnapshot = {\n    top: rect.top,\n    left: rect.left,\n    width: rect.width,\n    height: rect.height,\n    scrollOffsets: getElementScrollValue(element),\n  };\n\n  snapshots.set(element, snapshot);\n}\n\nexport function setElementAnimation(\n  element: ReanimatedHTMLElement,\n  animationConfig: AnimationConfig,\n  shouldSavePosition = false,\n  parent: Element | null = null\n) {\n  const { animationName, duration, delay, easing } = animationConfig;\n\n  const configureAnimation = () => {\n    element.style.animationName = animationName;\n    element.style.animationDuration = `${duration}s`;\n    element.style.animationDelay = `${delay}s`;\n    element.style.animationTimingFunction = easing;\n  };\n\n  if (animationConfig.animationType === LayoutAnimationType.ENTERING) {\n    // On chrome sometimes entering animations flicker. This is most likely caused by animation being interrupted\n    // by already started tasks. To avoid flickering, we use `requestAnimationFrame`, which will run callback right before repaint.\n    requestAnimationFrame(configureAnimation);\n  } else {\n    configureAnimation();\n  }\n\n  element.onanimationend = () => {\n    if (shouldSavePosition) {\n      saveSnapshot(element);\n    }\n\n    if (parent?.contains(element)) {\n      element.removedAfterAnimation = true;\n      parent.removeChild(element);\n    }\n\n    animationConfig.callback?.(true);\n    element.removeEventListener('animationcancel', animationCancelHandler);\n  };\n\n  const animationCancelHandler = () => {\n    animationConfig.callback?.(false);\n\n    if (parent?.contains(element)) {\n      element.removedAfterAnimation = true;\n      parent.removeChild(element);\n    }\n\n    element.removeEventListener('animationcancel', animationCancelHandler);\n  };\n\n  // Here we have to use `addEventListener` since element.onanimationcancel doesn't work on chrome\n  element.onanimationstart = () => {\n    if (animationConfig.animationType === LayoutAnimationType.ENTERING) {\n      _updatePropsJS({ visibility: 'initial' }, element);\n    }\n\n    element.addEventListener('animationcancel', animationCancelHandler);\n  };\n\n  if (!(animationName in Animations)) {\n    scheduleAnimationCleanup(animationName, duration + delay, () => {\n      if (shouldSavePosition) {\n        setElementPosition(element, snapshots.get(element)!);\n      }\n    });\n  }\n}\n\nexport function handleLayoutTransition(\n  element: ReanimatedHTMLElement,\n  animationConfig: AnimationConfig,\n  transitionData: TransitionData\n) {\n  const { animationName } = animationConfig;\n\n  let animationType;\n\n  switch (animationName) {\n    case 'LinearTransition':\n      animationType = TransitionType.LINEAR;\n      break;\n    case 'SequencedTransition':\n      animationType = TransitionType.SEQUENCED;\n      break;\n    case 'FadingTransition':\n      animationType = TransitionType.FADING;\n      break;\n    case 'JumpingTransition':\n      animationType = TransitionType.JUMPING;\n      break;\n    case 'CurvedTransition':\n      animationType = TransitionType.CURVED;\n      break;\n    case 'EntryExitTransition':\n      animationType = TransitionType.ENTRY_EXIT;\n      break;\n    default:\n      animationType = TransitionType.LINEAR;\n      break;\n  }\n\n  const { transitionKeyframeName, dummyTransitionKeyframeName } =\n    TransitionGenerator(animationType, transitionData);\n\n  animationConfig.animationName = transitionKeyframeName;\n\n  if (animationType === TransitionType.CURVED) {\n    const { dummy, dummyAnimationConfig } = prepareCurvedTransition(\n      element,\n      animationConfig,\n      transitionData,\n      dummyTransitionKeyframeName! // In `CurvedTransition` it cannot be undefined\n    );\n\n    setElementAnimation(dummy, dummyAnimationConfig);\n  }\n  setElementAnimation(element, animationConfig);\n}\n\nfunction getElementScrollValue(element: HTMLElement): ScrollOffsets {\n  let current: HTMLElement | null = element;\n\n  const scrollOffsets: ScrollOffsets = {\n    scrollTopOffset: 0,\n    scrollLeftOffset: 0,\n  };\n\n  while (current) {\n    if (current.scrollTop !== 0 && scrollOffsets.scrollTopOffset === 0) {\n      scrollOffsets.scrollTopOffset = current.scrollTop;\n    }\n\n    if (current.scrollLeft !== 0 && scrollOffsets.scrollLeftOffset === 0) {\n      scrollOffsets.scrollLeftOffset = current.scrollLeft;\n    }\n\n    current = current.parentElement;\n  }\n\n  return scrollOffsets;\n}\n\nexport function handleExitingAnimation(\n  element: HTMLElement,\n  animationConfig: AnimationConfig\n) {\n  const parent = element.offsetParent;\n  const dummy = element.cloneNode() as ReanimatedHTMLElement;\n  dummy.reanimatedDummy = true;\n\n  element.style.animationName = '';\n  dummy.style.animationName = '';\n\n  // After cloning the element, we want to move all children from original element to its clone. This is because original element\n  // will be unmounted, therefore when this code executes in child component, parent will be either empty or removed soon.\n  // Using element.cloneNode(true) doesn't solve the problem, because it creates copy of children and we won't be able to set their animations\n  //\n  // This loop works because appendChild() moves element into its new parent instead of copying it\n  while (element.firstChild) {\n    dummy.appendChild(element.firstChild);\n  }\n\n  parent?.appendChild(dummy);\n\n  const snapshot = snapshots.get(element)!;\n\n  const scrollOffsets = getElementScrollValue(element);\n\n  // Scroll does not trigger snapshotting, therefore if we start exiting animation after\n  // scrolling through parent component, dummy will end up in wrong place. In order to fix that\n  // we keep last known scroll position in snapshot and then adjust dummy position based on\n  // last known scroll offset and current scroll offset\n\n  const currentScrollTopOffset = scrollOffsets.scrollTopOffset;\n  const lastScrollTopOffset = snapshot.scrollOffsets.scrollTopOffset;\n\n  if (currentScrollTopOffset !== lastScrollTopOffset) {\n    snapshot.top += lastScrollTopOffset - currentScrollTopOffset;\n  }\n\n  const currentScrollLeftOffset = scrollOffsets.scrollLeftOffset;\n  const lastScrollLeftOffset = snapshot.scrollOffsets.scrollLeftOffset;\n\n  if (currentScrollLeftOffset !== lastScrollLeftOffset) {\n    snapshot.left += lastScrollLeftOffset - currentScrollLeftOffset;\n  }\n\n  snapshots.set(dummy, snapshot);\n\n  setElementPosition(dummy, snapshot);\n\n  setElementAnimation(dummy, animationConfig, false, parent);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}