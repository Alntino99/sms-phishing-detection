{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector from '../detectors/ScaleGestureDetector';\nexport default class PinchGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"scale\", 1);\n    _defineProperty(this, \"velocity\", 0);\n    _defineProperty(this, \"startingSpan\", 0);\n    _defineProperty(this, \"spanSlop\", DEFAULT_TOUCH_SLOP);\n    _defineProperty(this, \"scaleDetectorListener\", {\n      onScaleBegin: detector => {\n        this.startingSpan = detector.currentSpan;\n        return true;\n      },\n      onScale: detector => {\n        const prevScaleFactor = this.scale;\n        this.scale *= detector.calculateScaleFactor(this.tracker.trackedPointersCount);\n        const delta = detector.timeDelta;\n        if (delta > 0) {\n          this.velocity = (this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(this.startingSpan - detector.currentSpan) >= this.spanSlop && this.state === State.BEGAN) {\n          this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: _detector => {}\n    });\n    _defineProperty(this, \"scaleGestureDetector\", new ScaleGestureDetector(this.scaleDetectorListener));\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n    this.shouldCancelWhenOutside = false;\n  }\n  transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.focusX,\n      focalY: this.scaleGestureDetector.focusY,\n      velocity: this.velocity,\n      scale: this.scale\n    };\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.tryToSendTouchEvent(event);\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n      this.end();\n    }\n  }\n  onPointerMove(event) {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n  tryBegin() {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n    this.resetProgress();\n    this.begin();\n  }\n  activate(force) {\n    if (this.state !== State.ACTIVE) {\n      this.resetProgress();\n    }\n    super.activate(force);\n  }\n  onReset() {\n    this.resetProgress();\n  }\n  resetProgress() {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","constructor","args","_defineProperty","onScaleBegin","detector","startingSpan","currentSpan","onScale","prevScaleFactor","scale","calculateScaleFactor","tracker","trackedPointersCount","delta","timeDelta","velocity","Math","abs","spanSlop","state","BEGAN","activate","onScaleEnd","_detector","scaleDetectorListener","init","ref","propsRef","shouldCancelWhenOutside","transformNativeEvent","focalX","scaleGestureDetector","focusX","focalY","focusY","onPointerDown","event","addToTracker","tryToSendTouchEvent","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.currentSpan;\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.calculateScaleFactor(\n        this.tracker.trackedPointersCount\n      );\n\n      const delta = detector.timeDelta;\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.currentSpan) >= this.spanSlop &&\n        this.state === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = false;\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.focusX,\n      focalY: this.scaleGestureDetector.focusY,\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.state !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.state === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.state === State.ACTIVE && this.tracker.trackedPointersCount < 2) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.trackedPointersCount < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.state !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.state === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,oBAAP,MAEO,mCAFP;AAIA,eAAe,MAAMC,mBAAN,SAAkCF,cAAlC,CAAiD;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,gBAC9C,CAD8C;IAAAA,eAAA,mBAE3C,CAF2C;IAAAA,eAAA,uBAIvC,CAJuC;IAAAA,eAAA,mBAK3CN,kBAL2C;IAAAM,eAAA,gCAOR;MACpDC,YAAY,EAAGC,QAAD,IAA6C;QACzD,KAAKC,YAAL,GAAoBD,QAAQ,CAACE,WAA7B;QACA,OAAO,IAAP;MACD,CAJmD;MAKpDC,OAAO,EAAGH,QAAD,IAA6C;QACpD,MAAMI,eAAuB,GAAG,KAAKC,KAArC;QACA,KAAKA,KAAL,IAAcL,QAAQ,CAACM,oBAAT,CACZ,KAAKC,OAAL,CAAaC,oBADD,CAAd;QAIA,MAAMC,KAAK,GAAGT,QAAQ,CAACU,SAAvB;QACA,IAAID,KAAK,GAAG,CAAZ,EAAe;UACb,KAAKE,QAAL,GAAgB,CAAC,KAAKN,KAAL,GAAaD,eAAd,IAAiCK,KAAjD;QACD;QAED,IACEG,IAAI,CAACC,GAAL,CAAS,KAAKZ,YAAL,GAAoBD,QAAQ,CAACE,WAAtC,KAAsD,KAAKY,QAA3D,IACA,KAAKC,KAAL,KAAexB,KAAK,CAACyB,KAFvB,EAGE;UACA,KAAKC,QAAL;QACD;QACD,OAAO,IAAP;MACD,CAvBmD;MAwBpDC,UAAU,EACRC,SADU,IAGD,CAAE;IA3BuC,CAPQ;IAAArB,eAAA,+BAqCT,IAAIJ,oBAAJ,CACnD,KAAK0B,qBAD8C,CArCS;EAAA;EAyCvDC,IAAIA,CAACC,GAAD,EAAcC,QAAd,EAAkD;IAC3D,MAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;IAEA,KAAKC,uBAAL,GAA+B,KAA/B;EACD;EAESC,oBAAoBA,CAAA,EAAG;IAC/B,OAAO;MACLC,MAAM,EAAE,KAAKC,oBAAL,CAA0BC,MAD7B;MAELC,MAAM,EAAE,KAAKF,oBAAL,CAA0BG,MAF7B;MAGLnB,QAAQ,EAAE,KAAKA,QAHV;MAILN,KAAK,EAAE,KAAKA;IAJP,CAAP;EAMD;EAES0B,aAAaA,CAACC,KAAD,EAA4B;IACjD,KAAKzB,OAAL,CAAa0B,YAAb,CAA0BD,KAA1B;IACA,MAAMD,aAAN,CAAoBC,KAApB;IAEA,KAAKE,mBAAL,CAAyBF,KAAzB;EACD;EAESG,YAAYA,CAACH,KAAD,EAA4B;IAChD,KAAKzB,OAAL,CAAa0B,YAAb,CAA0BD,KAA1B;IACA,MAAMG,YAAN,CAAmBH,KAAnB;IACA,KAAKI,QAAL;IACA,KAAKT,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,EAA8C,KAAKzB,OAAnD;EACD;EAES+B,WAAWA,CAACN,KAAD,EAA4B;IAC/C,MAAMM,WAAN,CAAkBN,KAAlB;IACA,KAAKzB,OAAL,CAAagC,iBAAb,CAA+BP,KAAK,CAACQ,SAArC;IACA,IAAI,KAAKzB,KAAL,KAAexB,KAAK,CAACkD,MAAzB,EAAiC;MAC/B;IACD;IACD,KAAKd,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,EAA8C,KAAKzB,OAAnD;IAEA,IAAI,KAAKQ,KAAL,KAAexB,KAAK,CAACkD,MAAzB,EAAiC;MAC/B,KAAKC,GAAL;IACD,CAFD,MAEO;MACL,KAAKC,IAAL;IACD;EACF;EAESC,eAAeA,CAACZ,KAAD,EAA4B;IACnD,MAAMY,eAAN,CAAsBZ,KAAtB;IACA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,EAA8C,KAAKzB,OAAnD;IACA,KAAKA,OAAL,CAAagC,iBAAb,CAA+BP,KAAK,CAACQ,SAArC;IAEA,IAAI,KAAKzB,KAAL,KAAexB,KAAK,CAACkD,MAArB,IAA+B,KAAKlC,OAAL,CAAaC,oBAAb,GAAoC,CAAvE,EAA0E;MACxE,KAAKkC,GAAL;IACD;EACF;EAESG,aAAaA,CAACb,KAAD,EAA4B;IACjD,IAAI,KAAKzB,OAAL,CAAaC,oBAAb,GAAoC,CAAxC,EAA2C;MACzC;IACD;IACD,KAAKD,OAAL,CAAauC,KAAb,CAAmBd,KAAnB;IAEA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,EAA8C,KAAKzB,OAAnD;IACA,MAAMsC,aAAN,CAAoBb,KAApB;EACD;EACSe,oBAAoBA,CAACf,KAAD,EAA4B;IACxD,IAAI,KAAKzB,OAAL,CAAaC,oBAAb,GAAoC,CAAxC,EAA2C;MACzC;IACD;IACD,KAAKD,OAAL,CAAauC,KAAb,CAAmBd,KAAnB;IAEA,KAAKL,oBAAL,CAA0BU,YAA1B,CAAuCL,KAAvC,EAA8C,KAAKzB,OAAnD;IACA,MAAMwC,oBAAN,CAA2Bf,KAA3B;EACD;EAEOI,QAAQA,CAAA,EAAS;IACvB,IAAI,KAAKrB,KAAL,KAAexB,KAAK,CAACyD,YAAzB,EAAuC;MACrC;IACD;IAED,KAAKC,aAAL;IACA,KAAKC,KAAL;EACD;EAEMjC,QAAQA,CAACkC,KAAD,EAAwB;IACrC,IAAI,KAAKpC,KAAL,KAAexB,KAAK,CAACkD,MAAzB,EAAiC;MAC/B,KAAKQ,aAAL;IACD;IAED,MAAMhC,QAAN,CAAekC,KAAf;EACD;EAESC,OAAOA,CAAA,EAAS;IACxB,KAAKH,aAAL;EACD;EAESA,aAAaA,CAAA,EAAS;IAC9B,IAAI,KAAKlC,KAAL,KAAexB,KAAK,CAACkD,MAAzB,EAAiC;MAC/B;IACD;IACD,KAAK9B,QAAL,GAAgB,CAAhB;IACA,KAAKN,KAAL,GAAa,CAAb;EACD;AA7I6D","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}