{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"enabled\"];\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"buttonRole\", void 0);\n    _defineProperty(this, \"shouldActivateOnStart\", false);\n    _defineProperty(this, \"disallowInterruption\", false);\n    _defineProperty(this, \"startX\", 0);\n    _defineProperty(this, \"startY\", 0);\n    _defineProperty(this, \"minDistSq\", DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP);\n  }\n  init(ref, propsRef) {\n    super.init(ref, propsRef);\n    this.shouldCancelWhenOutside = true;\n    if (Platform.OS !== 'web') {\n      return;\n    }\n    const view = this.delegate.view;\n    this.restoreViewStyles(view);\n    this.buttonRole = view.getAttribute('role') === 'button';\n  }\n  updateGestureConfig(_ref) {\n    let {\n        enabled = true\n      } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    super.updateGestureConfig(Object.assign({\n      enabled: enabled\n    }, props));\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n    const view = this.delegate.view;\n    this.restoreViewStyles(view);\n  }\n  restoreViewStyles(view) {\n    if (!view) {\n      return;\n    }\n    view.style['touchAction'] = 'auto';\n    view.style['WebkitTouchCallout'] = 'auto';\n  }\n  onPointerDown(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n    this.tryToSendTouchEvent(event);\n  }\n  onPointerAdd(event) {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n  newPointerAction() {\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.startX = lastCoords.x;\n    this.startY = lastCoords.y;\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n    this.begin();\n    const view = this.delegate.view;\n    const isRNGHText = view.hasAttribute('rnghtext');\n    if (this.buttonRole || isRNGHText) {\n      this.activate();\n    }\n  }\n  onPointerMove(event) {\n    this.tracker.track(event);\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const dx = this.startX - lastCoords.x;\n    const dy = this.startY - lastCoords.y;\n    const distSq = dx * dx + dy * dy;\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.state === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.state === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n  onPointerLeave() {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      this.cancel();\n    }\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n  onUp(event) {\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.tracker.trackedPointersCount === 0) {\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n  shouldRecognizeSimultaneously(handler) {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n    if (handler instanceof NativeViewGestureHandler && handler.state === State.ACTIVE && handler.disallowsInterruption()) {\n      return false;\n    }\n    const canBeInterrupted = !this.disallowInterruption;\n    if (this.state === State.ACTIVE && handler.state === State.ACTIVE && canBeInterrupted) {\n      return false;\n    }\n    return this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0;\n  }\n  shouldBeCancelledByOther(_handler) {\n    return !this.disallowInterruption;\n  }\n  disallowsInterruption() {\n    return this.disallowInterruption;\n  }\n  isButton() {\n    return this.buttonRole;\n  }\n}","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","NativeViewGestureHandler","constructor","args","_defineProperty","init","ref","propsRef","shouldCancelWhenOutside","Platform","OS","view","delegate","restoreViewStyles","buttonRole","getAttribute","updateGestureConfig","_ref","enabled","props","_objectWithoutPropertiesLoose","_excluded","Object","assign","config","shouldActivateOnStart","undefined","disallowInterruption","style","onPointerDown","event","tracker","addToTracker","newPointerAction","tryToSendTouchEvent","onPointerAdd","lastCoords","getAbsoluteCoordsAverage","startX","x","startY","y","state","UNDETERMINED","begin","isRNGHText","hasAttribute","activate","onPointerMove","track","dx","dy","distSq","minDistSq","ACTIVE","cancel","BEGAN","onPointerLeave","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","trackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","disallowsInterruption","canBeInterrupted","handlerTag","shouldBeCancelledByOther","_handler","isButton"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\NativeViewGestureHandler.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  // TODO: Implement logic for activation on start\n  // @ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.shouldCancelWhenOutside = true;\n\n    if (Platform.OS !== 'web') {\n      return;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n\n    this.restoreViewStyles(view);\n    this.buttonRole = view.getAttribute('role') === 'button';\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n\n    const view = this.delegate.view as HTMLElement;\n    this.restoreViewStyles(view);\n  }\n\n  private restoreViewStyles(view: HTMLElement) {\n    if (!view) {\n      return;\n    }\n\n    view.style['touchAction'] = 'auto';\n    // @ts-ignore Turns on defualt touch behavior on Safari\n    view.style['WebkitTouchCallout'] = 'auto';\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    this.startX = lastCoords.x;\n    this.startY = lastCoords.y;\n\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n\n    const view = this.delegate.view as HTMLElement;\n    const isRNGHText = view.hasAttribute('rnghtext');\n\n    if (this.buttonRole || isRNGHText) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const lastCoords = this.tracker.getAbsoluteCoordsAverage();\n    const dx = this.startX - lastCoords.x;\n    const dy = this.startY - lastCoords.y;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.state === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.state === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerLeave(): void {\n    if (this.state === State.BEGAN || this.state === State.ACTIVE) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.trackedPointersCount === 0) {\n      if (this.state === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.state === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.state === State.ACTIVE &&\n      handler.state === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.state === State.ACTIVE && canBeInterrupted && handler.handlerTag > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n\n  public isButton(): boolean {\n    return this.buttonRole;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AACA,SAASA,KAAT,QAAsB,aAAtB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,eAAe,MAAMC,wBAAN,SAAuCD,cAAvC,CAAsD;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA;IAAAA,eAAA,gCAKnC,KALmC;IAAAA,eAAA,+BAMpC,KANoC;IAAAA,eAAA,iBAQlD,CARkD;IAAAA,eAAA,iBASlD,CATkD;IAAAA,eAAA,oBAU/CL,kBAAkB,GAAGA,kBAV0B;EAAA;EAY5DM,IAAIA,CAACC,GAAD,EAAcC,QAAd,EAAwD;IACjE,MAAMF,IAAN,CAAWC,GAAX,EAAgBC,QAAhB;IAEA,KAAKC,uBAAL,GAA+B,IAA/B;IAEA,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzB;IACD;IAED,MAAMC,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;IAEA,KAAKE,iBAAL,CAAuBF,IAAvB;IACA,KAAKG,UAAL,GAAkBH,IAAI,CAACI,YAAL,CAAkB,MAAlB,MAA8B,QAAhD;EACD;EAEMC,mBAAmBA,CAAAC,IAAA,EAA6C;IAAA,IAA5C;QAAEC,OAAO,GAAG;MAAZ,CAAD,GAAAD,IAAA;MAAsBE,KAAA,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;IAC9C,MAAML,mBAAN,CAAAM,MAAA,CAAAC,MAAA;MAA4BL,OAAO,EAAEA;IAAX,GAAuBC,KAAA,CAAjD;IAEA,IAAI,KAAKK,MAAL,CAAYC,qBAAZ,KAAsCC,SAA1C,EAAqD;MACnD,KAAKD,qBAAL,GAA6B,KAAKD,MAAL,CAAYC,qBAAzC;IACD;IACD,IAAI,KAAKD,MAAL,CAAYG,oBAAZ,KAAqCD,SAAzC,EAAoD;MAClD,KAAKC,oBAAL,GAA4B,KAAKH,MAAL,CAAYG,oBAAxC;IACD;IAED,MAAMhB,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;IACA,KAAKE,iBAAL,CAAuBF,IAAvB;EACD;EAEOE,iBAAiBA,CAACF,IAAD,EAAoB;IAC3C,IAAI,CAACA,IAAL,EAAW;MACT;IACD;IAEDA,IAAI,CAACiB,KAAL,CAAW,aAAX,IAA4B,MAA5B;IAEAjB,IAAI,CAACiB,KAAL,CAAW,oBAAX,IAAmC,MAAnC;EACD;EAESC,aAAaA,CAACC,KAAD,EAA4B;IACjD,KAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;IACA,MAAMD,aAAN,CAAoBC,KAApB;IACA,KAAKG,gBAAL;IAEA,KAAKC,mBAAL,CAAyBJ,KAAzB;EACD;EAESK,YAAYA,CAACL,KAAD,EAA4B;IAChD,KAAKC,OAAL,CAAaC,YAAb,CAA0BF,KAA1B;IACA,MAAMK,YAAN,CAAmBL,KAAnB;IACA,KAAKG,gBAAL;EACD;EAEOA,gBAAgBA,CAAA,EAAS;IAC/B,MAAMG,UAAU,GAAG,KAAKL,OAAL,CAAaM,wBAAb,EAAnB;IACA,KAAKC,MAAL,GAAcF,UAAU,CAACG,CAAzB;IACA,KAAKC,MAAL,GAAcJ,UAAU,CAACK,CAAzB;IAEA,IAAI,KAAKC,KAAL,KAAe5C,KAAK,CAAC6C,YAAzB,EAAuC;MACrC;IACD;IAED,KAAKC,KAAL;IAEA,MAAMjC,IAAI,GAAG,KAAKC,QAAL,CAAcD,IAA3B;IACA,MAAMkC,UAAU,GAAGlC,IAAI,CAACmC,YAAL,CAAkB,UAAlB,CAAnB;IAEA,IAAI,KAAKhC,UAAL,IAAmB+B,UAAvB,EAAmC;MACjC,KAAKE,QAAL;IACD;EACF;EAESC,aAAaA,CAAClB,KAAD,EAA4B;IACjD,KAAKC,OAAL,CAAakB,KAAb,CAAmBnB,KAAnB;IAEA,MAAMM,UAAU,GAAG,KAAKL,OAAL,CAAaM,wBAAb,EAAnB;IACA,MAAMa,EAAE,GAAG,KAAKZ,MAAL,GAAcF,UAAU,CAACG,CAApC;IACA,MAAMY,EAAE,GAAG,KAAKX,MAAL,GAAcJ,UAAU,CAACK,CAApC;IACA,MAAMW,MAAM,GAAGF,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAA9B;IAEA,IAAIC,MAAM,IAAI,KAAKC,SAAnB,EAA8B;MAC5B,IAAI,KAAKvC,UAAL,IAAmB,KAAK4B,KAAL,KAAe5C,KAAK,CAACwD,MAA5C,EAAoD;QAClD,KAAKC,MAAL;MACD,CAFD,MAEO,IAAI,CAAC,KAAKzC,UAAN,IAAoB,KAAK4B,KAAL,KAAe5C,KAAK,CAAC0D,KAA7C,EAAoD;QACzD,KAAKT,QAAL;MACD;IACF;EACF;EAESU,cAAcA,CAAA,EAAS;IAC/B,IAAI,KAAKf,KAAL,KAAe5C,KAAK,CAAC0D,KAArB,IAA8B,KAAKd,KAAL,KAAe5C,KAAK,CAACwD,MAAvD,EAA+D;MAC7D,KAAKC,MAAL;IACD;EACF;EAESG,WAAWA,CAAC5B,KAAD,EAA4B;IAC/C,MAAM4B,WAAN,CAAkB5B,KAAlB;IACA,KAAK6B,IAAL,CAAU7B,KAAV;EACD;EAES8B,eAAeA,CAAC9B,KAAD,EAA4B;IACnD,MAAM8B,eAAN,CAAsB9B,KAAtB;IACA,KAAK6B,IAAL,CAAU7B,KAAV;EACD;EAEO6B,IAAIA,CAAC7B,KAAD,EAA4B;IACtC,KAAKC,OAAL,CAAa8B,iBAAb,CAA+B/B,KAAK,CAACgC,SAArC;IAEA,IAAI,KAAK/B,OAAL,CAAagC,oBAAb,KAAsC,CAA1C,EAA6C;MAC3C,IAAI,KAAKrB,KAAL,KAAe5C,KAAK,CAACwD,MAAzB,EAAiC;QAC/B,KAAKU,GAAL;MACD,CAFD,MAEO;QACL,KAAKC,IAAL;MACD;IACF;EACF;EAEMC,6BAA6BA,CAACC,OAAD,EAAmC;IACrE,IAAI,MAAMD,6BAAN,CAAoCC,OAApC,CAAJ,EAAkD;MAChD,OAAO,IAAP;IACD;IAED,IACEA,OAAO,YAAYlE,wBAAnB,IACAkE,OAAO,CAACzB,KAAR,KAAkB5C,KAAK,CAACwD,MADxB,IAEAa,OAAO,CAACC,qBAAR,EAHF,EAIE;MACA,OAAO,KAAP;IACD;IAED,MAAMC,gBAAgB,GAAG,CAAC,KAAK1C,oBAA/B;IAEA,IACE,KAAKe,KAAL,KAAe5C,KAAK,CAACwD,MAArB,IACAa,OAAO,CAACzB,KAAR,KAAkB5C,KAAK,CAACwD,MADxB,IAEAe,gBAHF,EAIE;MACA,OAAO,KAAP;IACD;IAED,OACE,KAAK3B,KAAL,KAAe5C,KAAK,CAACwD,MAArB,IAA+Be,gBAA/B,IAAmDF,OAAO,CAACG,UAAR,GAAqB,CAD1E;EAGD;EAEMC,wBAAwBA,CAACC,QAAD,EAAoC;IACjE,OAAO,CAAC,KAAK7C,oBAAb;EACD;EAEMyC,qBAAqBA,CAAA,EAAY;IACtC,OAAO,KAAKzC,oBAAZ;EACD;EAEM8C,QAAQA,CAAA,EAAY;IACzB,OAAO,KAAK3D,UAAZ;EACD;AAvKkE","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}