{"ast":null,"code":"import { PointerType } from '../PointerType';\nexport function isPointerInBounds(view, {\n  x,\n  y\n}) {\n  const rect = view.getBoundingClientRect();\n  return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n}\nexport const PointerTypeMapping = new Map([['mouse', PointerType.MOUSE], ['touch', PointerType.TOUCH], ['pen', PointerType.STYLUS], ['none', PointerType.OTHER]]);\nexport const degToRad = degrees => degrees * Math.PI / 180;\nexport const coneToDeviation = degrees => Math.cos(degToRad(degrees / 2));\nexport function calculateViewScale(view) {\n  var _RegExp$exec;\n  const styles = getComputedStyle(view);\n  const resultScales = {\n    scaleX: 1,\n    scaleY: 1\n  };\n  if (styles.scale !== undefined && styles.scale !== 'none') {\n    const scales = styles.scale.split(' ');\n    if (scales[0]) {\n      resultScales.scaleX = parseFloat(scales[0]);\n    }\n    resultScales.scaleY = scales[1] ? parseFloat(scales[1]) : parseFloat(scales[0]);\n  }\n  const matrixElements = (_RegExp$exec = new RegExp(/matrix\\((.+)\\)/).exec(styles.transform)) === null || _RegExp$exec === void 0 ? void 0 : _RegExp$exec[1];\n  if (matrixElements) {\n    const matrixElementsArray = matrixElements.split(', ');\n    resultScales.scaleX *= parseFloat(matrixElementsArray[0]);\n    resultScales.scaleY *= parseFloat(matrixElementsArray[3]);\n  }\n  return resultScales;\n}\nexport function tryExtractStylusData(event) {\n  const pointerType = PointerTypeMapping.get(event.pointerType);\n  if (pointerType !== PointerType.STYLUS) {\n    return;\n  }\n  const eventAzimuthAngle = event.azimuthAngle;\n  const eventAltitudeAngle = event.altitudeAngle;\n  if (event.tiltX === 0 && event.tiltY === 0) {\n    if (eventAzimuthAngle === undefined || eventAltitudeAngle === undefined) {\n      return {\n        tiltX: 0,\n        tiltY: 0,\n        azimuthAngle: Math.PI / 2,\n        altitudeAngle: Math.PI / 2,\n        pressure: event.pressure\n      };\n    }\n    const {\n      tiltX,\n      tiltY\n    } = spherical2tilt(eventAltitudeAngle, eventAzimuthAngle);\n    return {\n      tiltX,\n      tiltY,\n      azimuthAngle: eventAzimuthAngle,\n      altitudeAngle: eventAltitudeAngle,\n      pressure: event.pressure\n    };\n  }\n  const {\n    altitudeAngle,\n    azimuthAngle\n  } = tilt2spherical(event.tiltX, event.tiltY);\n  return {\n    tiltX: event.tiltX,\n    tiltY: event.tiltY,\n    azimuthAngle,\n    altitudeAngle,\n    pressure: event.pressure\n  };\n}\nfunction tilt2spherical(tiltX, tiltY) {\n  const tiltXrad = tiltX * Math.PI / 180;\n  const tiltYrad = tiltY * Math.PI / 180;\n  let azimuthAngle = 0;\n  if (tiltX === 0) {\n    if (tiltY > 0) {\n      azimuthAngle = Math.PI / 2;\n    } else if (tiltY < 0) {\n      azimuthAngle = 3 * Math.PI / 2;\n    }\n  } else if (tiltY === 0) {\n    if (tiltX < 0) {\n      azimuthAngle = Math.PI;\n    }\n  } else if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n    azimuthAngle = 0;\n  } else {\n    const tanX = Math.tan(tiltXrad);\n    const tanY = Math.tan(tiltYrad);\n    azimuthAngle = Math.atan2(tanY, tanX);\n    if (azimuthAngle < 0) {\n      azimuthAngle += 2 * Math.PI;\n    }\n  }\n  let altitudeAngle = 0;\n  if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n    altitudeAngle = 0;\n  } else if (tiltX === 0) {\n    altitudeAngle = Math.PI / 2 - Math.abs(tiltYrad);\n  } else if (tiltY === 0) {\n    altitudeAngle = Math.PI / 2 - Math.abs(tiltXrad);\n  } else {\n    altitudeAngle = Math.atan(1.0 / Math.sqrt(Math.pow(Math.tan(tiltXrad), 2) + Math.pow(Math.tan(tiltYrad), 2)));\n  }\n  return {\n    altitudeAngle: altitudeAngle,\n    azimuthAngle: azimuthAngle\n  };\n}\nfunction spherical2tilt(altitudeAngle, azimuthAngle) {\n  const radToDeg = 180 / Math.PI;\n  let tiltXrad = 0;\n  let tiltYrad = 0;\n  if (altitudeAngle === 0) {\n    if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n      tiltXrad = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI / 2) {\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI) {\n      tiltXrad = -Math.PI / 2;\n    }\n    if (azimuthAngle === 3 * Math.PI / 2) {\n      tiltYrad = -Math.PI / 2;\n    }\n    if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n      tiltXrad = Math.PI / 2;\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n      tiltXrad = -Math.PI / 2;\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI && azimuthAngle < 3 * Math.PI / 2) {\n      tiltXrad = -Math.PI / 2;\n      tiltYrad = -Math.PI / 2;\n    }\n    if (azimuthAngle > 3 * Math.PI / 2 && azimuthAngle < 2 * Math.PI) {\n      tiltXrad = Math.PI / 2;\n      tiltYrad = -Math.PI / 2;\n    }\n  }\n  if (altitudeAngle !== 0) {\n    const tanAlt = Math.tan(altitudeAngle);\n    tiltXrad = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n    tiltYrad = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n  }\n  const tiltX = Math.round(tiltXrad * radToDeg);\n  const tiltY = Math.round(tiltYrad * radToDeg);\n  return {\n    tiltX,\n    tiltY\n  };\n}\nexport const RNSVGElements = new Set(['Circle', 'ClipPath', 'Ellipse', 'ForeignObject', 'G', 'Image', 'Line', 'Marker', 'Mask', 'Path', 'Pattern', 'Polygon', 'Polyline', 'Rect', 'Svg', 'Symbol', 'TSpan', 'Text', 'TextPath', 'Use']);\nexport function isRNSVGElement(viewRef) {\n  const componentClassName = Object.getPrototypeOf(viewRef).constructor.name;\n  return RNSVGElements.has(componentClassName) && Object.hasOwn(viewRef, 'elementRef');\n}\nexport function isRNSVGNode(node) {\n  var _node$ref, _Object$getPrototypeO, _node$type;\n  if ((_node$ref = node.ref) !== null && _node$ref !== void 0 && _node$ref.rngh) {\n    return false;\n  }\n  return ((_Object$getPrototypeO = Object.getPrototypeOf(node === null || node === void 0 ? void 0 : node.type)) === null || _Object$getPrototypeO === void 0 ? void 0 : _Object$getPrototypeO.name) === 'WebShape' || RNSVGElements.has(node === null || node === void 0 ? void 0 : (_node$type = node.type) === null || _node$type === void 0 ? void 0 : _node$type.displayName);\n}","map":{"version":3,"names":["PointerType","isPointerInBounds","view","x","y","rect","getBoundingClientRect","left","right","top","bottom","PointerTypeMapping","Map","MOUSE","TOUCH","STYLUS","OTHER","degToRad","degrees","Math","PI","coneToDeviation","cos","calculateViewScale","_RegExp$exec","styles","getComputedStyle","resultScales","scaleX","scaleY","scale","undefined","scales","split","parseFloat","matrixElements","RegExp","exec","transform","matrixElementsArray","tryExtractStylusData","event","pointerType","get","eventAzimuthAngle","azimuthAngle","eventAltitudeAngle","altitudeAngle","tiltX","tiltY","pressure","spherical2tilt","tilt2spherical","tiltXrad","tiltYrad","abs","tanX","tan","tanY","atan2","atan","sqrt","pow","radToDeg","tanAlt","sin","round","RNSVGElements","Set","isRNSVGElement","viewRef","componentClassName","Object","getPrototypeOf","constructor","name","has","hasOwn","isRNSVGNode","node","_node$ref","_Object$getPrototypeO","_node$type","ref","rngh","type","displayName"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\utils.ts"],"sourcesContent":["import { PointerType } from '../PointerType';\nimport type {\n  GestureHandlerRef,\n  Point,\n  StylusData,\n  SVGRef,\n} from './interfaces';\n\nexport function isPointerInBounds(view: HTMLElement, { x, y }: Point): boolean {\n  const rect: DOMRect = view.getBoundingClientRect();\n\n  return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n}\n\nexport const PointerTypeMapping = new Map<string, PointerType>([\n  ['mouse', PointerType.MOUSE],\n  ['touch', PointerType.TOUCH],\n  ['pen', PointerType.STYLUS],\n  ['none', PointerType.OTHER],\n]);\n\nexport const degToRad = (degrees: number) => (degrees * Math.PI) / 180;\n\nexport const coneToDeviation = (degrees: number) =>\n  Math.cos(degToRad(degrees / 2));\n\nexport function calculateViewScale(view: HTMLElement) {\n  const styles = getComputedStyle(view);\n\n  const resultScales = {\n    scaleX: 1,\n    scaleY: 1,\n  };\n\n  // Get scales from scale property\n  if (styles.scale !== undefined && styles.scale !== 'none') {\n    const scales = styles.scale.split(' ');\n\n    if (scales[0]) {\n      resultScales.scaleX = parseFloat(scales[0]);\n    }\n\n    resultScales.scaleY = scales[1]\n      ? parseFloat(scales[1])\n      : parseFloat(scales[0]);\n  }\n\n  // Get scales from transform property\n  const matrixElements = new RegExp(/matrix\\((.+)\\)/).exec(\n    styles.transform\n  )?.[1];\n\n  if (matrixElements) {\n    const matrixElementsArray = matrixElements.split(', ');\n\n    resultScales.scaleX *= parseFloat(matrixElementsArray[0]);\n    resultScales.scaleY *= parseFloat(matrixElementsArray[3]);\n  }\n\n  return resultScales;\n}\n\nexport function tryExtractStylusData(\n  event: PointerEvent\n): StylusData | undefined {\n  const pointerType = PointerTypeMapping.get(event.pointerType);\n\n  if (pointerType !== PointerType.STYLUS) {\n    return;\n  }\n\n  // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n  const eventAzimuthAngle: number | undefined = event.azimuthAngle;\n  // @ts-ignore This property exists (https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent#instance_properties)\n  const eventAltitudeAngle: number | undefined = event.altitudeAngle;\n\n  if (event.tiltX === 0 && event.tiltY === 0) {\n    // If we are in this branch, it means that either tilt properties are not supported and we have to calculate them from altitude and azimuth angles,\n    // or stylus is perpendicular to the screen and we can use altitude / azimuth instead of tilt\n\n    // If azimuth and altitude are undefined in this branch, it means that we are either perpendicular to the screen,\n    // or that none of the position sets is supported. In that case, we can treat stylus as perpendicular\n    if (eventAzimuthAngle === undefined || eventAltitudeAngle === undefined) {\n      return {\n        tiltX: 0,\n        tiltY: 0,\n        azimuthAngle: Math.PI / 2,\n        altitudeAngle: Math.PI / 2,\n        pressure: event.pressure,\n      };\n    }\n\n    const { tiltX, tiltY } = spherical2tilt(\n      eventAltitudeAngle,\n      eventAzimuthAngle\n    );\n\n    return {\n      tiltX,\n      tiltY,\n      azimuthAngle: eventAzimuthAngle,\n      altitudeAngle: eventAltitudeAngle,\n      pressure: event.pressure,\n    };\n  }\n\n  const { altitudeAngle, azimuthAngle } = tilt2spherical(\n    event.tiltX,\n    event.tiltY\n  );\n\n  return {\n    tiltX: event.tiltX,\n    tiltY: event.tiltY,\n    azimuthAngle,\n    altitudeAngle,\n    pressure: event.pressure,\n  };\n}\n\n// `altitudeAngle` and `azimuthAngle` are experimental properties, which are not supported on Firefox and Safari.\n// Given that, we use `tilt` properties and algorithm that converts one value to another.\n//\n// Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\nfunction tilt2spherical(tiltX: number, tiltY: number) {\n  const tiltXrad = (tiltX * Math.PI) / 180;\n  const tiltYrad = (tiltY * Math.PI) / 180;\n\n  // calculate azimuth angle\n  let azimuthAngle = 0;\n\n  if (tiltX === 0) {\n    if (tiltY > 0) {\n      azimuthAngle = Math.PI / 2;\n    } else if (tiltY < 0) {\n      azimuthAngle = (3 * Math.PI) / 2;\n    }\n  } else if (tiltY === 0) {\n    if (tiltX < 0) {\n      azimuthAngle = Math.PI;\n    }\n  } else if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n    // not enough information to calculate azimuth\n    azimuthAngle = 0;\n  } else {\n    // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n    const tanX = Math.tan(tiltXrad);\n    const tanY = Math.tan(tiltYrad);\n\n    azimuthAngle = Math.atan2(tanY, tanX);\n    if (azimuthAngle < 0) {\n      azimuthAngle += 2 * Math.PI;\n    }\n  }\n\n  // calculate altitude angle\n  let altitudeAngle = 0;\n\n  if (Math.abs(tiltX) === 90 || Math.abs(tiltY) === 90) {\n    altitudeAngle = 0;\n  } else if (tiltX === 0) {\n    altitudeAngle = Math.PI / 2 - Math.abs(tiltYrad);\n  } else if (tiltY === 0) {\n    altitudeAngle = Math.PI / 2 - Math.abs(tiltXrad);\n  } else {\n    // Non-boundary case: neither tiltX nor tiltY is equal to 0 or +-90\n    altitudeAngle = Math.atan(\n      1.0 /\n        Math.sqrt(\n          Math.pow(Math.tan(tiltXrad), 2) + Math.pow(Math.tan(tiltYrad), 2)\n        )\n    );\n  }\n\n  return { altitudeAngle: altitudeAngle, azimuthAngle: azimuthAngle };\n}\n\n// If we are on a platform that doesn't support `tiltX` and `tiltY`, we have to calculate them from `altitude` and `azimuth` angles.\n//\n// Source: https://w3c.github.io/pointerevents/#converting-between-tiltx-tilty-and-altitudeangle-azimuthangle\nfunction spherical2tilt(altitudeAngle: number, azimuthAngle: number) {\n  const radToDeg = 180 / Math.PI;\n\n  let tiltXrad = 0;\n  let tiltYrad = 0;\n\n  if (altitudeAngle === 0) {\n    // the pen is in the X-Y plane\n    if (azimuthAngle === 0 || azimuthAngle === 2 * Math.PI) {\n      // pen is on positive X axis\n      tiltXrad = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI / 2) {\n      // pen is on positive Y axis\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle === Math.PI) {\n      // pen is on negative X axis\n      tiltXrad = -Math.PI / 2;\n    }\n    if (azimuthAngle === (3 * Math.PI) / 2) {\n      // pen is on negative Y axis\n      tiltYrad = -Math.PI / 2;\n    }\n    if (azimuthAngle > 0 && azimuthAngle < Math.PI / 2) {\n      tiltXrad = Math.PI / 2;\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI / 2 && azimuthAngle < Math.PI) {\n      tiltXrad = -Math.PI / 2;\n      tiltYrad = Math.PI / 2;\n    }\n    if (azimuthAngle > Math.PI && azimuthAngle < (3 * Math.PI) / 2) {\n      tiltXrad = -Math.PI / 2;\n      tiltYrad = -Math.PI / 2;\n    }\n    if (azimuthAngle > (3 * Math.PI) / 2 && azimuthAngle < 2 * Math.PI) {\n      tiltXrad = Math.PI / 2;\n      tiltYrad = -Math.PI / 2;\n    }\n  }\n\n  if (altitudeAngle !== 0) {\n    const tanAlt = Math.tan(altitudeAngle);\n\n    tiltXrad = Math.atan(Math.cos(azimuthAngle) / tanAlt);\n    tiltYrad = Math.atan(Math.sin(azimuthAngle) / tanAlt);\n  }\n\n  const tiltX = Math.round(tiltXrad * radToDeg);\n  const tiltY = Math.round(tiltYrad * radToDeg);\n\n  return { tiltX, tiltY };\n}\n\nexport const RNSVGElements = new Set([\n  'Circle',\n  'ClipPath',\n  'Ellipse',\n  'ForeignObject',\n  'G',\n  'Image',\n  'Line',\n  'Marker',\n  'Mask',\n  'Path',\n  'Pattern',\n  'Polygon',\n  'Polyline',\n  'Rect',\n  'Svg',\n  'Symbol',\n  'TSpan',\n  'Text',\n  'TextPath',\n  'Use',\n]);\n\n// This function helps us determine whether given node is SVGElement or not. In our implementation of\n// findNodeHandle, we can encounter such element in 2 forms - SVG tag or ref to SVG Element. Since Gesture Handler\n// does not depend on SVG, we use our simplified SVGRef type that has `elementRef` field. This is something that is present\n// in actual SVG ref object.\n//\n// In order to make sure that node passed into this function is in fact SVG element, first we check if its constructor name\n// corresponds to one of the possible SVG elements. Then we also check if `elementRef` field exists.\n// By doing both steps we decrease probability of detecting situations where, for example, user makes custom `Circle` and\n// we treat it as SVG.\nexport function isRNSVGElement(viewRef: SVGRef | GestureHandlerRef) {\n  const componentClassName = Object.getPrototypeOf(viewRef).constructor.name;\n\n  return (\n    RNSVGElements.has(componentClassName) &&\n    Object.hasOwn(viewRef, 'elementRef')\n  );\n}\n\n// This function checks if given node is SVGElement. Unlike the function above, this one\n// operates on React Nodes, not DOM nodes.\n//\n// Second condition was introduced to handle case where SVG element was wrapped with\n// `createAnimatedComponent` from Reanimated.\nexport function isRNSVGNode(node: any) {\n  // If `ref` has `rngh` field, it means that component comes from Gesture Handler. This is a special case for\n  // `Text` component, which is present in `RNSVGElements` set, yet we don't want to treat it as SVG.\n  if (node.ref?.rngh) {\n    return false;\n  }\n\n  return (\n    Object.getPrototypeOf(node?.type)?.name === 'WebShape' ||\n    RNSVGElements.has(node?.type?.displayName)\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}