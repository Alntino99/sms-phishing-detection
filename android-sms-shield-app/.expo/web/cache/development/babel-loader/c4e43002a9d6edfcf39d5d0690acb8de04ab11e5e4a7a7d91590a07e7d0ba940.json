{"ast":null,"code":"'use strict';\n\nimport { blue, green, hsvToColor, opacity, processColor, red, rgbaColor, RGBtoHSV } from \"./Colors.js\";\nimport { makeMutable } from \"./core.js\";\nimport culori from \"./culori/index.js\";\nimport { ReanimatedError } from \"./errors.js\";\nimport { useSharedValue } from \"./hook/useSharedValue.js\";\nimport { Extrapolation, interpolate } from \"./interpolation.js\";\nexport const Extrapolate = Extrapolation;\nconst _worklet_13129257120836_init_data = {\n  code: \"function interpolateColorJs1(value,inputRange,colors,options){const{interpolate,Extrapolation,hsvToColor}=this.__closure;let h=0;const{useCorrectedHSVInterpolation=true}=options;if(useCorrectedHSVInterpolation){const correctedInputRange=[inputRange[0]];const originalH=colors.h;const correctedH=[originalH[0]];for(let i=1;i<originalH.length;++i){const d=originalH[i]-originalH[i-1];if(originalH[i]>originalH[i-1]&&d>0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]-1);correctedH.push(originalH[i]);}else if(originalH[i]<originalH[i-1]&&d<-0.5){correctedInputRange.push(inputRange[i]);correctedInputRange.push(inputRange[i]+0.00001);correctedH.push(originalH[i]+1);correctedH.push(originalH[i]);}else{correctedInputRange.push(inputRange[i]);correctedH.push(originalH[i]);}}h=(interpolate(value,correctedInputRange,correctedH,Extrapolation.CLAMP)+1)%1;}else{h=interpolate(value,inputRange,colors.h,Extrapolation.CLAMP);}const s=interpolate(value,inputRange,colors.s,Extrapolation.CLAMP);const v=interpolate(value,inputRange,colors.v,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);return hsvToColor(h,s,v,a);}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs1\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"hsvToColor\\\",\\\"__closure\\\",\\\"h\\\",\\\"useCorrectedHSVInterpolation\\\",\\\"correctedInputRange\\\",\\\"originalH\\\",\\\"correctedH\\\",\\\"i\\\",\\\"length\\\",\\\"d\\\",\\\"push\\\",\\\"CLAMP\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst interpolateColorsHSV = function () {\n  const _e = [new global.Error(), -4, -27];\n  const interpolateColorJs1 = function (value, inputRange, colors, options) {\n    let h = 0;\n    const {\n      useCorrectedHSVInterpolation = true\n    } = options;\n    if (useCorrectedHSVInterpolation) {\n      const correctedInputRange = [inputRange[0]];\n      const originalH = colors.h;\n      const correctedH = [originalH[0]];\n      for (let i = 1; i < originalH.length; ++i) {\n        const d = originalH[i] - originalH[i - 1];\n        if (originalH[i] > originalH[i - 1] && d > 0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] - 1);\n          correctedH.push(originalH[i]);\n        } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n          correctedInputRange.push(inputRange[i]);\n          correctedInputRange.push(inputRange[i] + 0.00001);\n          correctedH.push(originalH[i] + 1);\n          correctedH.push(originalH[i]);\n        } else {\n          correctedInputRange.push(inputRange[i]);\n          correctedH.push(originalH[i]);\n        }\n      }\n      h = (interpolate(value, correctedInputRange, correctedH, Extrapolation.CLAMP) + 1) % 1;\n    } else {\n      h = interpolate(value, inputRange, colors.h, Extrapolation.CLAMP);\n    }\n    const s = interpolate(value, inputRange, colors.s, Extrapolation.CLAMP);\n    const v = interpolate(value, inputRange, colors.v, Extrapolation.CLAMP);\n    const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n    return hsvToColor(h, s, v, a);\n  };\n  interpolateColorJs1.__closure = {\n    interpolate,\n    Extrapolation,\n    hsvToColor\n  };\n  interpolateColorJs1.__workletHash = 13129257120836;\n  interpolateColorJs1.__initData = _worklet_13129257120836_init_data;\n  interpolateColorJs1.__stackDetails = _e;\n  return interpolateColorJs1;\n}();\nconst _worklet_14181116787695_init_data = {\n  code: \"function interpolateColorJs2(x,gamma){return x.map(function(v){return Math.pow(v/255,gamma);});}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs2\\\",\\\"x\\\",\\\"gamma\\\",\\\"map\\\",\\\"v\\\",\\\"Math\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA6DsB,QAAC,CAAAA,mBAAaA,CAAAC,CAAA,CAAAC,KAAA,EAGlC,MAAO,CAAAD,CAAC,CAACE,GAAG,CAAC,SAAAC,CAAC,QAAI,CAAAC,IAAI,CAACC,GAAG,CAACF,CAAC,CAAG,GAAG,CAAEF,KAAK,CAAC,GAAC,CAC7C\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst toLinearSpace = function () {\n  const _e = [new global.Error(), 1, -27];\n  const interpolateColorJs2 = function (x, gamma) {\n    return x.map(v => Math.pow(v / 255, gamma));\n  };\n  interpolateColorJs2.__closure = {};\n  interpolateColorJs2.__workletHash = 14181116787695;\n  interpolateColorJs2.__initData = _worklet_14181116787695_init_data;\n  interpolateColorJs2.__stackDetails = _e;\n  return interpolateColorJs2;\n}();\nconst _worklet_17264473455247_init_data = {\n  code: \"function interpolateColorJs3(x,gamma){return Math.round(Math.pow(x,1/gamma)*255);}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs3\\\",\\\"x\\\",\\\"gamma\\\",\\\"Math\\\",\\\"round\\\",\\\"pow\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAkEqB,QAAC,CAAAA,mBAAaA,CAAAC,CAAA,CAAAC,KAAA,EAGjC,MAAO,CAAAC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACJ,CAAC,CAAE,CAAC,CAAGC,KAAK,CAAC,CAAG,GAAG,CAAC,CACjD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst toGammaSpace = function () {\n  const _e = [new global.Error(), 1, -27];\n  const interpolateColorJs3 = function (x, gamma) {\n    return Math.round(Math.pow(x, 1 / gamma) * 255);\n  };\n  interpolateColorJs3.__closure = {};\n  interpolateColorJs3.__workletHash = 17264473455247;\n  interpolateColorJs3.__initData = _worklet_17264473455247_init_data;\n  interpolateColorJs3.__stackDetails = _e;\n  return interpolateColorJs3;\n}();\nconst _worklet_8638875677747_init_data = {\n  code: \"function interpolateColorJs4(value,inputRange,colors,options){const{toLinearSpace,interpolate,Extrapolation,rgbaColor,toGammaSpace}=this.__closure;const{gamma=2.2}=options;let{r:outputR,g:outputG,b:outputB}=colors;if(gamma!==1){outputR=toLinearSpace(outputR,gamma);outputG=toLinearSpace(outputG,gamma);outputB=toLinearSpace(outputB,gamma);}const r=interpolate(value,inputRange,outputR,Extrapolation.CLAMP);const g=interpolate(value,inputRange,outputG,Extrapolation.CLAMP);const b=interpolate(value,inputRange,outputB,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);if(gamma===1){return rgbaColor(r,g,b,a);}return rgbaColor(toGammaSpace(r,gamma),toGammaSpace(g,gamma),toGammaSpace(b,gamma),a);}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs4\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"options\\\",\\\"toLinearSpace\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"rgbaColor\\\",\\\"toGammaSpace\\\",\\\"__closure\\\",\\\"gamma\\\",\\\"r\\\",\\\"outputR\\\",\\\"g\\\",\\\"outputG\\\",\\\"b\\\",\\\"outputB\\\",\\\"CLAMP\\\",\\\"a\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAuE6B,QAAC,CAAAA,mBAAiBA,CAAAC,KAAE,CAAMC,UAAS,CAAKC,MAAA,CAAAC,OAAA,QAAAC,aAAA,CAAAC,WAAA,CAAAC,aAAA,CAAAC,SAAA,CAAAC,YAAA,OAAAC,SAAA,CAGnE,KAAM,CACJC,KAAK,CAAG,GACV,CAAC,CAAGP,OAAO,CACX,GAAI,CACFQ,CAAC,CAAEC,OAAO,CACVC,CAAC,CAAEC,OAAO,CACVC,CAAC,CAAEC,OACL,CAAC,CAAGd,MAAM,CACV,GAAIQ,KAAK,GAAK,CAAC,CAAE,CACfE,OAAO,CAAGR,aAAa,CAACQ,OAAO,CAAEF,KAAK,CAAC,CACvCI,OAAO,CAAGV,aAAa,CAACU,OAAO,CAAEJ,KAAK,CAAC,CACvCM,OAAO,CAAGZ,aAAa,CAACY,OAAO,CAAEN,KAAK,CAAC,CACzC,CACA,KAAM,CAAAC,CAAC,CAAGN,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEW,OAAO,CAAEN,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAJ,CAAC,CAAGR,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEa,OAAO,CAAER,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAF,CAAC,CAAGV,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEe,OAAO,CAAEV,aAAa,CAACW,KAAK,CAAC,CACtE,KAAM,CAAAC,CAAC,CAAGb,WAAW,CAACL,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACgB,CAAC,CAAEZ,aAAa,CAACW,KAAK,CAAC,CACvE,GAAIP,KAAK,GAAK,CAAC,CAAE,CACf,MAAO,CAAAH,SAAS,CAACI,CAAC,CAAEE,CAAC,CAAEE,CAAC,CAAEG,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAX,SAAS,CAACC,YAAY,CAACG,CAAC,CAAED,KAAK,CAAC,CAAEF,YAAY,CAACK,CAAC,CAAEH,KAAK,CAAC,CAAEF,YAAY,CAACO,CAAC,CAAEL,KAAK,CAAC,CAAEQ,CAAC,CAAC,CAC7F\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst interpolateColorsRGB = function () {\n  const _e = [new global.Error(), -6, -27];\n  const interpolateColorJs4 = function (value, inputRange, colors, options) {\n    const {\n      gamma = 2.2\n    } = options;\n    let {\n      r: outputR,\n      g: outputG,\n      b: outputB\n    } = colors;\n    if (gamma !== 1) {\n      outputR = toLinearSpace(outputR, gamma);\n      outputG = toLinearSpace(outputG, gamma);\n      outputB = toLinearSpace(outputB, gamma);\n    }\n    const r = interpolate(value, inputRange, outputR, Extrapolation.CLAMP);\n    const g = interpolate(value, inputRange, outputG, Extrapolation.CLAMP);\n    const b = interpolate(value, inputRange, outputB, Extrapolation.CLAMP);\n    const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n    if (gamma === 1) {\n      return rgbaColor(r, g, b, a);\n    }\n    return rgbaColor(toGammaSpace(r, gamma), toGammaSpace(g, gamma), toGammaSpace(b, gamma), a);\n  };\n  interpolateColorJs4.__closure = {\n    toLinearSpace,\n    interpolate,\n    Extrapolation,\n    rgbaColor,\n    toGammaSpace\n  };\n  interpolateColorJs4.__workletHash = 8638875677747;\n  interpolateColorJs4.__initData = _worklet_8638875677747_init_data;\n  interpolateColorJs4.__stackDetails = _e;\n  return interpolateColorJs4;\n}();\nconst _worklet_11685971065915_init_data = {\n  code: \"function interpolateColorJs5(value,inputRange,colors,_options){const{interpolate,Extrapolation,culori,rgbaColor}=this.__closure;const l=interpolate(value,inputRange,colors.l,Extrapolation.CLAMP);const a=interpolate(value,inputRange,colors.a,Extrapolation.CLAMP);const b=interpolate(value,inputRange,colors.b,Extrapolation.CLAMP);const alpha=interpolate(value,inputRange,colors.alpha,Extrapolation.CLAMP);const{r:_r,g:_g,b:_b,alpha:_alpha}=culori.oklab.convert.toRgb({l:l,a:a,b:b,alpha:alpha});return rgbaColor(_r,_g,_b,_alpha);}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs5\\\",\\\"value\\\",\\\"inputRange\\\",\\\"colors\\\",\\\"_options\\\",\\\"interpolate\\\",\\\"Extrapolation\\\",\\\"culori\\\",\\\"rgbaColor\\\",\\\"__closure\\\",\\\"l\\\",\\\"CLAMP\\\",\\\"a\\\",\\\"b\\\",\\\"alpha\\\",\\\"r\\\",\\\"_r\\\",\\\"g\\\",\\\"_g\\\",\\\"_b\\\",\\\"_alpha\\\",\\\"oklab\\\",\\\"convert\\\",\\\"toRgb\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAgG6B,QAAC,CAAAA,mBAAiBA,CAAAC,KAAE,CAAMC,UAAU,CAAKC,MAAA,CAAAC,QAAA,QAAAC,WAAA,CAAAC,aAAA,CAAAC,MAAA,CAAAC,SAAA,OAAAC,SAAA,CAGpE,KAAM,CAAAC,CAAC,CAAGL,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACO,CAAC,CAAEJ,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAC,CAAC,CAAGP,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACS,CAAC,CAAEN,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAE,CAAC,CAAGR,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACU,CAAC,CAAEP,aAAa,CAACK,KAAK,CAAC,CACvE,KAAM,CAAAG,KAAK,CAAGT,WAAW,CAACJ,KAAK,CAAEC,UAAU,CAAEC,MAAM,CAACW,KAAK,CAAER,aAAa,CAACK,KAAK,CAAC,CAC/E,KAAM,CACJI,CAAC,CAAEC,EAAE,CACLC,CAAC,CAAEC,EAAE,CACLL,CAAC,CAAEM,EAAE,CACLL,KAAK,CAAEM,MACT,CAAC,CAAGb,MAAM,CAACc,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC,CAC7Bb,CAAC,CAADA,CAAC,CACDE,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,CACDC,KAAA,CAAAA,KACF,CAAC,CAAC,CACF,MAAO,CAAAN,SAAS,CAACQ,EAAE,CAAEE,EAAE,CAAEC,EAAE,CAAEC,MAAM,CAAC,CACtC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst interpolateColorsLAB = function () {\n  const _e = [new global.Error(), -5, -27];\n  const interpolateColorJs5 = function (value, inputRange, colors, _options) {\n    const l = interpolate(value, inputRange, colors.l, Extrapolation.CLAMP);\n    const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n    const b = interpolate(value, inputRange, colors.b, Extrapolation.CLAMP);\n    const alpha = interpolate(value, inputRange, colors.alpha, Extrapolation.CLAMP);\n    const {\n      r: _r,\n      g: _g,\n      b: _b,\n      alpha: _alpha\n    } = culori.oklab.convert.toRgb({\n      l,\n      a,\n      b,\n      alpha\n    });\n    return rgbaColor(_r, _g, _b, _alpha);\n  };\n  interpolateColorJs5.__closure = {\n    interpolate,\n    Extrapolation,\n    culori,\n    rgbaColor\n  };\n  interpolateColorJs5.__workletHash = 11685971065915;\n  interpolateColorJs5.__initData = _worklet_11685971065915_init_data;\n  interpolateColorJs5.__stackDetails = _e;\n  return interpolateColorJs5;\n}();\nconst _worklet_6405587769388_init_data = {\n  code: \"function interpolateColorJs6(colors,convFromRgb){const{processColor,red,green,blue,opacity}=this.__closure;const ch1=[];const ch2=[];const ch3=[];const alpha=[];for(let i=0;i<colors.length;i++){const color=colors[i];const processedColor=processColor(color);if(typeof processedColor==='number'){const convertedColor=convFromRgb({r:red(processedColor),g:green(processedColor),b:blue(processedColor)});ch1.push(convertedColor.ch1);ch2.push(convertedColor.ch2);ch3.push(convertedColor.ch3);alpha.push(opacity(processedColor));}}return{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha};}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs6\\\",\\\"colors\\\",\\\"convFromRgb\\\",\\\"processColor\\\",\\\"red\\\",\\\"green\\\",\\\"blue\\\",\\\"opacity\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"i\\\",\\\"length\\\",\\\"color\\\",\\\"processedColor\\\",\\\"convertedColor\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"push\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAoHiC,QAAC,CAAAA,mBAAQA,CAAAC,MAAgB,CAAAC,WAAA,QAAAC,YAAA,CAAAC,GAAA,CAAAC,KAAA,CAAAC,IAAA,CAAAC,OAAA,OAAAC,SAAA,CAGxD,KAAM,CAAAC,GAAG,CAAG,EAAE,CACd,KAAM,CAAAC,GAAG,CAAG,EAAE,CACd,KAAM,CAAAC,GAAG,CAAG,EAAE,CACd,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,MAAM,CAACa,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAE,KAAK,CAAGd,MAAM,CAACY,CAAC,CAAC,CACvB,KAAM,CAAAG,cAAc,CAAGb,YAAY,CAACY,KAAK,CAAC,CAC1C,GAAI,MAAO,CAAAC,cAAc,GAAK,QAAQ,CAAE,CACtC,KAAM,CAAAC,cAAc,CAAGf,WAAW,CAAC,CACjCgB,CAAC,CAAEd,GAAG,CAACY,cAAc,CAAC,CACtBG,CAAC,CAAEd,KAAK,CAACW,cAAc,CAAC,CACxBI,CAAC,CAAEd,IAAI,CAACU,cAAc,CACxB,CAAC,CAAC,CACFP,GAAG,CAACY,IAAI,CAACJ,cAAc,CAACR,GAAG,CAAC,CAC5BC,GAAG,CAACW,IAAI,CAACJ,cAAc,CAACP,GAAG,CAAC,CAC5BC,GAAG,CAACU,IAAI,CAACJ,cAAc,CAACN,GAAG,CAAC,CAC5BC,KAAK,CAACS,IAAI,CAACd,OAAO,CAACS,cAAc,CAAC,CAAC,CACrC,CACF,CACA,MAAO,CACLP,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,KAAA,CAAAA,KACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst _splitColorsIntoChannels = function () {\n  const _e = [new global.Error(), -6, -27];\n  const interpolateColorJs6 = function (colors, convFromRgb) {\n    const ch1 = [];\n    const ch2 = [];\n    const ch3 = [];\n    const alpha = [];\n    for (let i = 0; i < colors.length; i++) {\n      const color = colors[i];\n      const processedColor = processColor(color);\n      if (typeof processedColor === 'number') {\n        const convertedColor = convFromRgb({\n          r: red(processedColor),\n          g: green(processedColor),\n          b: blue(processedColor)\n        });\n        ch1.push(convertedColor.ch1);\n        ch2.push(convertedColor.ch2);\n        ch3.push(convertedColor.ch3);\n        alpha.push(opacity(processedColor));\n      }\n    }\n    return {\n      ch1,\n      ch2,\n      ch3,\n      alpha\n    };\n  };\n  interpolateColorJs6.__closure = {\n    processColor,\n    red,\n    green,\n    blue,\n    opacity\n  };\n  interpolateColorJs6.__workletHash = 6405587769388;\n  interpolateColorJs6.__initData = _worklet_6405587769388_init_data;\n  interpolateColorJs6.__stackDetails = _e;\n  return interpolateColorJs6;\n}();\nconst _worklet_17202525310342_init_data = {\n  code: \"function interpolateColorJs7(colors){const{_splitColorsIntoChannels}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){return{ch1:color.r,ch2:color.g,ch3:color.b};});return{r:ch1,g:ch2,b:ch3,a:alpha};}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs7\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"a\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAiJ0B,SAAAA,mBAAUA,CAAAC,MAAA,QAAAC,wBAAA,OAAAC,SAAA,CAGlC,KAAM,CACJC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,KAAA,CAAAA,KACF,CAAC,CAAGL,wBAAwB,CAACD,MAAM,CAAE,SAAAO,KAAK,QAAK,CAC7CJ,GAAG,CAAEI,KAAK,CAACC,CAAC,CACZJ,GAAG,CAAEG,KAAK,CAACE,CAAC,CACZJ,GAAG,CAAEE,KAAK,CAACG,CACb,CAAC,EAAC,CAAC,CACH,MAAO,CACLF,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,GAAG,CACNM,CAAC,CAAEL,KACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst getInterpolateRGB = function () {\n  const _e = [new global.Error(), -2, -27];\n  const interpolateColorJs7 = function (colors) {\n    const {\n      ch1,\n      ch2,\n      ch3,\n      alpha\n    } = _splitColorsIntoChannels(colors, color => ({\n      ch1: color.r,\n      ch2: color.g,\n      ch3: color.b\n    }));\n    return {\n      r: ch1,\n      g: ch2,\n      b: ch3,\n      a: alpha\n    };\n  };\n  interpolateColorJs7.__closure = {\n    _splitColorsIntoChannels\n  };\n  interpolateColorJs7.__workletHash = 17202525310342;\n  interpolateColorJs7.__initData = _worklet_17202525310342_init_data;\n  interpolateColorJs7.__stackDetails = _e;\n  return interpolateColorJs7;\n}();\nconst _worklet_3304109939742_init_data = {\n  code: \"function interpolateColorJs8(colors){const{_splitColorsIntoChannels,RGBtoHSV}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const hsvColor=RGBtoHSV(color.r,color.g,color.b);return{ch1:hsvColor.h,ch2:hsvColor.s,ch3:hsvColor.v};});return{h:ch1,s:ch2,v:ch3,a:alpha};}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs8\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"RGBtoHSV\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"hsvColor\\\",\\\"r\\\",\\\"g\\\",\\\"b\\\",\\\"h\\\",\\\"s\\\",\\\"v\\\",\\\"a\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAqK0B,SAAAA,mBAAUA,CAAAC,MAAA,QAAAC,wBAAA,CAAAC,QAAA,OAAAC,SAAA,CAGlC,KAAM,CACJC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,KAAA,CAAAA,KACF,CAAC,CAAGN,wBAAwB,CAACD,MAAM,CAAE,SAAAQ,KAAK,CAAI,CAC5C,KAAM,CAAAC,QAAQ,CAAGP,QAAQ,CAACM,KAAK,CAACE,CAAC,CAAEF,KAAK,CAACG,CAAC,CAAEH,KAAK,CAACI,CAAC,CAAC,CACpD,MAAO,CACLR,GAAG,CAAEK,QAAQ,CAACI,CAAC,CACfR,GAAG,CAAEI,QAAQ,CAACK,CAAC,CACfR,GAAG,CAAEG,QAAQ,CAACM,CAChB,CAAC,CACH,CAAC,CAAC,CACF,MAAO,CACLF,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,KACL,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst getInterpolateHSV = function () {\n  const _e = [new global.Error(), -3, -27];\n  const interpolateColorJs8 = function (colors) {\n    const {\n      ch1,\n      ch2,\n      ch3,\n      alpha\n    } = _splitColorsIntoChannels(colors, color => {\n      const hsvColor = RGBtoHSV(color.r, color.g, color.b);\n      return {\n        ch1: hsvColor.h,\n        ch2: hsvColor.s,\n        ch3: hsvColor.v\n      };\n    });\n    return {\n      h: ch1,\n      s: ch2,\n      v: ch3,\n      a: alpha\n    };\n  };\n  interpolateColorJs8.__closure = {\n    _splitColorsIntoChannels,\n    RGBtoHSV\n  };\n  interpolateColorJs8.__workletHash = 3304109939742;\n  interpolateColorJs8.__initData = _worklet_3304109939742_init_data;\n  interpolateColorJs8.__stackDetails = _e;\n  return interpolateColorJs8;\n}();\nconst _worklet_8302602200896_init_data = {\n  code: \"function interpolateColorJs9(colors){const{_splitColorsIntoChannels,culori}=this.__closure;const{ch1:ch1,ch2:ch2,ch3:ch3,alpha:alpha}=_splitColorsIntoChannels(colors,function(color){const labColor=culori.oklab.convert.fromRgb(color);return{ch1:labColor.l,ch2:labColor.a,ch3:labColor.b};});return{l:ch1,a:ch2,b:ch3,alpha:alpha};}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColorJs9\\\",\\\"colors\\\",\\\"_splitColorsIntoChannels\\\",\\\"culori\\\",\\\"__closure\\\",\\\"ch1\\\",\\\"ch2\\\",\\\"ch3\\\",\\\"alpha\\\",\\\"color\\\",\\\"labColor\\\",\\\"oklab\\\",\\\"convert\\\",\\\"fromRgb\\\",\\\"l\\\",\\\"a\\\",\\\"b\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AA4L0B,SAAAA,mBAAUA,CAAAC,MAAA,QAAAC,wBAAA,CAAAC,MAAA,OAAAC,SAAA,CAGlC,KAAM,CACJC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,GAAG,CAAHA,GAAG,CACHC,KAAA,CAAAA,KACF,CAAC,CAAGN,wBAAwB,CAACD,MAAM,CAAE,SAAAQ,KAAK,CAAI,CAC5C,KAAM,CAAAC,QAAQ,CAAGP,MAAM,CAACQ,KAAK,CAACC,OAAO,CAACC,OAAO,CAACJ,KAAK,CAAC,CACpD,MAAO,CACLJ,GAAG,CAAEK,QAAQ,CAACI,CAAC,CACfR,GAAG,CAAEI,QAAQ,CAACK,CAAC,CACfR,GAAG,CAAEG,QAAQ,CAACM,CAChB,CAAC,CACH,CAAC,CAAC,CACF,MAAO,CACLF,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNU,CAAC,CAAET,GAAG,CACNC,KAAA,CAAAA,KACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst getInterpolateLAB = function () {\n  const _e = [new global.Error(), -3, -27];\n  const interpolateColorJs9 = function (colors) {\n    const {\n      ch1,\n      ch2,\n      ch3,\n      alpha\n    } = _splitColorsIntoChannels(colors, color => {\n      const labColor = culori.oklab.convert.fromRgb(color);\n      return {\n        ch1: labColor.l,\n        ch2: labColor.a,\n        ch3: labColor.b\n      };\n    });\n    return {\n      l: ch1,\n      a: ch2,\n      b: ch3,\n      alpha\n    };\n  };\n  interpolateColorJs9.__closure = {\n    _splitColorsIntoChannels,\n    culori\n  };\n  interpolateColorJs9.__workletHash = 8302602200896;\n  interpolateColorJs9.__initData = _worklet_8302602200896_init_data;\n  interpolateColorJs9.__stackDetails = _e;\n  return interpolateColorJs9;\n}();\nconst _worklet_611886447692_init_data = {\n  code: \"function interpolateColor_interpolateColorJs10(value,inputRange,outputRange,colorSpace='RGB',options={}){const{interpolateColorsHSV,getInterpolateHSV,interpolateColorsRGB,getInterpolateRGB,interpolateColorsLAB,getInterpolateLAB}=this.__closure;if(colorSpace==='HSV'){return interpolateColorsHSV(value,inputRange,getInterpolateHSV(outputRange),options);}else if(colorSpace==='RGB'){return interpolateColorsRGB(value,inputRange,getInterpolateRGB(outputRange),options);}else if(colorSpace==='LAB'){return interpolateColorsLAB(value,inputRange,getInterpolateLAB(outputRange),options);}throw new ReanimatedError(\\\"Invalid color space provided: \\\"+colorSpace+\\\". Supported values are: ['RGB', 'HSV', 'LAB'].\\\");}\",\n  location: \"C:\\\\Users\\\\Ntino\\\\Desktop\\\\End of year project\\\\N-pro\\\\android-sms-shield-app\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\interpolateColor.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"interpolateColor_interpolateColorJs10\\\",\\\"value\\\",\\\"inputRange\\\",\\\"outputRange\\\",\\\"colorSpace\\\",\\\"options\\\",\\\"interpolateColorsHSV\\\",\\\"getInterpolateHSV\\\",\\\"interpolateColorsRGB\\\",\\\"getInterpolateRGB\\\",\\\"interpolateColorsLAB\\\",\\\"getInterpolateLAB\\\",\\\"__closure\\\",\\\"ReanimatedError\\\"],\\\"sources\\\":[\\\"C:/Users/Ntino/Desktop/End of year project/N-pro/android-sms-shield-app/node_modules/react-native-reanimated/lib/module/interpolateColor.js\\\"],\\\"mappings\\\":\\\"AAuOO,SAAAA,qCAA6CA,CAAAC,KAAA,CAAAC,UAAa,CAAAC,WAAkB,CAAEC,UAAW,CAAC,KAAE,CAAAC,OAAA,WAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,CAAAC,oBAAA,CAAAC,iBAAA,OAAAC,SAAA,CAGjG,GAAIR,UAAU,GAAK,KAAK,CAAE,CACxB,MAAO,CAAAE,oBAAoB,CAACL,KAAK,CAAEC,UAAU,CAAEK,iBAAiB,CAACJ,WAAW,CAAC,CAAEE,OAAO,CAAC,CACzF,CAAC,IAAM,IAAID,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAI,oBAAoB,CAACP,KAAK,CAAEC,UAAU,CAAEO,iBAAiB,CAACN,WAAW,CAAC,CAAEE,OAAO,CAAC,CACzF,CAAC,IAAM,IAAID,UAAU,GAAK,KAAK,CAAE,CAC/B,MAAO,CAAAM,oBAAoB,CAACT,KAAK,CAAEC,UAAU,CAAES,iBAAiB,CAACR,WAAW,CAAC,CAAEE,OAAO,CAAC,CACzF,CACA,KAAM,IAAI,CAAAQ,eAAe,kCAAkCT,UAAU,iDAAgD,CAAC,CACxH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nexport const interpolateColor = function () {\n  const _e = [new global.Error(), -7, -27];\n  const interpolateColor = function (value, inputRange, outputRange, colorSpace = 'RGB', options = {}) {\n    if (colorSpace === 'HSV') {\n      return interpolateColorsHSV(value, inputRange, getInterpolateHSV(outputRange), options);\n    } else if (colorSpace === 'RGB') {\n      return interpolateColorsRGB(value, inputRange, getInterpolateRGB(outputRange), options);\n    } else if (colorSpace === 'LAB') {\n      return interpolateColorsLAB(value, inputRange, getInterpolateLAB(outputRange), options);\n    }\n    throw new ReanimatedError(`Invalid color space provided: ${colorSpace}. Supported values are: ['RGB', 'HSV', 'LAB'].`);\n  };\n  interpolateColor.__closure = {\n    interpolateColorsHSV,\n    getInterpolateHSV,\n    interpolateColorsRGB,\n    getInterpolateRGB,\n    interpolateColorsLAB,\n    getInterpolateLAB\n  };\n  interpolateColor.__workletHash = 611886447692;\n  interpolateColor.__initData = _worklet_611886447692_init_data;\n  interpolateColor.__stackDetails = _e;\n  return interpolateColor;\n}();\nexport let ColorSpace = function (ColorSpace) {\n  ColorSpace[ColorSpace[\"RGB\"] = 0] = \"RGB\";\n  ColorSpace[ColorSpace[\"HSV\"] = 1] = \"HSV\";\n  ColorSpace[ColorSpace[\"LAB\"] = 2] = \"LAB\";\n  return ColorSpace;\n}({});\nexport function useInterpolateConfig(inputRange, outputRange, colorSpace = ColorSpace.RGB, options = {}) {\n  return useSharedValue({\n    inputRange,\n    outputRange,\n    colorSpace,\n    cache: makeMutable(null),\n    options\n  });\n}","map":{"version":3,"names":["blue","green","hsvToColor","opacity","processColor","red","rgbaColor","RGBtoHSV","makeMutable","culori","ReanimatedError","useSharedValue","Extrapolation","interpolate","Extrapolate","_worklet_13129257120836_init_data","code","location","sourceMap","version","interpolateColorsHSV","_e","global","Error","interpolateColorJs1","value","inputRange","colors","options","h","useCorrectedHSVInterpolation","correctedInputRange","originalH","correctedH","i","length","d","push","CLAMP","s","v","a","__closure","__workletHash","__initData","__stackDetails","_worklet_14181116787695_init_data","toLinearSpace","interpolateColorJs2","x","gamma","map","Math","pow","_worklet_17264473455247_init_data","toGammaSpace","interpolateColorJs3","round","_worklet_8638875677747_init_data","interpolateColorsRGB","interpolateColorJs4","r","outputR","g","outputG","b","outputB","_worklet_11685971065915_init_data","interpolateColorsLAB","interpolateColorJs5","_options","l","alpha","_r","_g","_b","_alpha","oklab","convert","toRgb","_worklet_6405587769388_init_data","_splitColorsIntoChannels","interpolateColorJs6","convFromRgb","ch1","ch2","ch3","color","processedColor","convertedColor","_worklet_17202525310342_init_data","getInterpolateRGB","interpolateColorJs7","_worklet_3304109939742_init_data","getInterpolateHSV","interpolateColorJs8","hsvColor","_worklet_8302602200896_init_data","getInterpolateLAB","interpolateColorJs9","labColor","fromRgb","_worklet_611886447692_init_data","interpolateColor","outputRange","colorSpace","ColorSpace","useInterpolateConfig","RGB","cache"],"sources":["C:\\Users\\Ntino\\Desktop\\End of year project\\N-pro\\android-sms-shield-app\\node_modules\\react-native-reanimated\\src\\interpolateColor.ts"],"sourcesContent":["'use strict';\nimport {\n  blue,\n  green,\n  hsvToColor,\n  opacity,\n  processColor,\n  red,\n  rgbaColor,\n  RGBtoHSV,\n} from './Colors';\nimport type { SharedValue } from './commonTypes';\nimport { makeMutable } from './core';\nimport culori from './culori';\nimport { ReanimatedError } from './errors';\nimport { useSharedValue } from './hook/useSharedValue';\nimport { Extrapolation, interpolate } from './interpolation';\n\n/** @deprecated Please use Extrapolation instead */\nexport const Extrapolate = Extrapolation;\n\n/**\n * Options for color interpolation.\n *\n * @param gamma - Gamma value used in gamma correction. Defaults to `2.2`.\n * @param useCorrectedHSVInterpolation - Whether to reduce the number of colors\n *   the interpolation has to go through. Defaults to `true`.\n */\nexport type InterpolationOptions = {\n  gamma?: number;\n  useCorrectedHSVInterpolation?: boolean;\n};\n\nconst interpolateColorsHSV = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateHSV,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  let h = 0;\n  const { useCorrectedHSVInterpolation = true } = options;\n  if (useCorrectedHSVInterpolation) {\n    // if the difference between hues in a range is > 180 deg\n    // then move the hue at the right end of the range +/- 360 deg\n    // and add the next point in the original place + 0.00001 with original hue\n    // to not break the next range\n    const correctedInputRange = [inputRange[0]];\n    const originalH = colors.h;\n    const correctedH = [originalH[0]];\n\n    for (let i = 1; i < originalH.length; ++i) {\n      const d = originalH[i] - originalH[i - 1];\n      if (originalH[i] > originalH[i - 1] && d > 0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] - 1);\n        correctedH.push(originalH[i]);\n      } else if (originalH[i] < originalH[i - 1] && d < -0.5) {\n        correctedInputRange.push(inputRange[i]);\n        correctedInputRange.push(inputRange[i] + 0.00001);\n        correctedH.push(originalH[i] + 1);\n        correctedH.push(originalH[i]);\n      } else {\n        correctedInputRange.push(inputRange[i]);\n        correctedH.push(originalH[i]);\n      }\n    }\n    h =\n      (interpolate(\n        value,\n        correctedInputRange,\n        correctedH,\n        Extrapolation.CLAMP\n      ) +\n        1) %\n      1;\n  } else {\n    h = interpolate(value, inputRange, colors.h, Extrapolation.CLAMP);\n  }\n  const s = interpolate(value, inputRange, colors.s, Extrapolation.CLAMP);\n  const v = interpolate(value, inputRange, colors.v, Extrapolation.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n  return hsvToColor(h, s, v, a);\n};\n\nconst toLinearSpace = (x: number[], gamma: number): number[] => {\n  'worklet';\n  return x.map((v) => Math.pow(v / 255, gamma));\n};\n\nconst toGammaSpace = (x: number, gamma: number): number => {\n  'worklet';\n  return Math.round(Math.pow(x, 1 / gamma) * 255);\n};\n\nconst interpolateColorsRGB = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateRGB,\n  options: InterpolationOptions\n) => {\n  'worklet';\n  const { gamma = 2.2 } = options;\n  let { r: outputR, g: outputG, b: outputB } = colors;\n  if (gamma !== 1) {\n    outputR = toLinearSpace(outputR, gamma);\n    outputG = toLinearSpace(outputG, gamma);\n    outputB = toLinearSpace(outputB, gamma);\n  }\n  const r = interpolate(value, inputRange, outputR, Extrapolation.CLAMP);\n  const g = interpolate(value, inputRange, outputG, Extrapolation.CLAMP);\n  const b = interpolate(value, inputRange, outputB, Extrapolation.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n  if (gamma === 1) {\n    return rgbaColor(r, g, b, a);\n  }\n  return rgbaColor(\n    toGammaSpace(r, gamma),\n    toGammaSpace(g, gamma),\n    toGammaSpace(b, gamma),\n    a\n  );\n};\n\nconst interpolateColorsLAB = (\n  value: number,\n  inputRange: readonly number[],\n  colors: InterpolateLAB,\n  _options: InterpolationOptions\n) => {\n  'worklet';\n  const l = interpolate(value, inputRange, colors.l, Extrapolation.CLAMP);\n  const a = interpolate(value, inputRange, colors.a, Extrapolation.CLAMP);\n  const b = interpolate(value, inputRange, colors.b, Extrapolation.CLAMP);\n  const alpha = interpolate(\n    value,\n    inputRange,\n    colors.alpha,\n    Extrapolation.CLAMP\n  );\n  const {\n    r: _r,\n    g: _g,\n    b: _b,\n    alpha: _alpha,\n  } = culori.oklab.convert.toRgb({ l, a, b, alpha });\n  return rgbaColor(_r, _g, _b, _alpha);\n};\n\nconst _splitColorsIntoChannels = (\n  colors: readonly (string | number)[],\n  convFromRgb: (color: { r: number; g: number; b: number }) => {\n    ch1: number;\n    ch2: number;\n    ch3: number;\n  }\n): {\n  ch1: number[];\n  ch2: number[];\n  ch3: number[];\n  alpha: number[];\n} => {\n  'worklet';\n  const ch1: number[] = [];\n  const ch2: number[] = [];\n  const ch3: number[] = [];\n  const alpha: number[] = [];\n\n  for (let i = 0; i < colors.length; i++) {\n    const color = colors[i];\n    const processedColor = processColor(color);\n    if (typeof processedColor === 'number') {\n      const convertedColor = convFromRgb({\n        r: red(processedColor),\n        g: green(processedColor),\n        b: blue(processedColor),\n      });\n\n      ch1.push(convertedColor.ch1);\n      ch2.push(convertedColor.ch2);\n      ch3.push(convertedColor.ch3);\n      alpha.push(opacity(processedColor));\n    }\n  }\n\n  return {\n    ch1,\n    ch2,\n    ch3,\n    alpha,\n  };\n};\n\nexport interface InterpolateRGB {\n  r: number[];\n  g: number[];\n  b: number[];\n  a: number[];\n}\n\nconst getInterpolateRGB = (\n  colors: readonly (string | number)[]\n): InterpolateRGB => {\n  'worklet';\n  const { ch1, ch2, ch3, alpha } = _splitColorsIntoChannels(\n    colors,\n    (color) => ({\n      ch1: color.r,\n      ch2: color.g,\n      ch3: color.b,\n    })\n  );\n\n  return {\n    r: ch1,\n    g: ch2,\n    b: ch3,\n    a: alpha,\n  };\n};\n\nexport interface InterpolateHSV {\n  h: number[];\n  s: number[];\n  v: number[];\n  a: number[];\n}\n\nconst getInterpolateHSV = (\n  colors: readonly (string | number)[]\n): InterpolateHSV => {\n  'worklet';\n  const { ch1, ch2, ch3, alpha } = _splitColorsIntoChannels(colors, (color) => {\n    const hsvColor = RGBtoHSV(color.r, color.g, color.b);\n    return {\n      ch1: hsvColor.h,\n      ch2: hsvColor.s,\n      ch3: hsvColor.v,\n    };\n  });\n\n  return {\n    h: ch1,\n    s: ch2,\n    v: ch3,\n    a: alpha,\n  };\n};\n\nexport interface InterpolateLAB {\n  l: number[];\n  a: number[];\n  b: number[];\n  alpha: number[];\n}\n\nconst getInterpolateLAB = (\n  colors: readonly (string | number)[]\n): InterpolateLAB => {\n  'worklet';\n\n  const { ch1, ch2, ch3, alpha } = _splitColorsIntoChannels(colors, (color) => {\n    const labColor = culori.oklab.convert.fromRgb(color);\n    return {\n      ch1: labColor.l,\n      ch2: labColor.a,\n      ch3: labColor.b,\n    };\n  });\n\n  return {\n    l: ch1,\n    a: ch2,\n    b: ch3,\n    alpha,\n  };\n};\n\n/**\n * Lets you map a value from a range of numbers to a range of colors using\n * linear interpolation.\n *\n * @param value - A number from the `input` range that is going to be mapped to\n *   the color in the `output` range.\n * @param inputRange - An array of numbers specifying the input range of the\n *   interpolation.\n * @param outputRange - An array of output colors values (eg. \"red\", \"#00FFCC\",\n *   \"rgba(255, 0, 0, 0.5)\").\n * @param colorSpace - The color space to use for interpolation. Defaults to\n *   'RGB'.\n * @param options - Additional options for interpolation -\n *   {@link InterpolationOptions}.\n * @returns The color after interpolation from within the output range in\n *   rgba(r, g, b, a) format.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/utilities/interpolateColor\n */\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly string[],\n  colorSpace?: 'RGB' | 'HSV' | 'LAB',\n  options?: InterpolationOptions\n): string;\n\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly number[],\n  colorSpace?: 'RGB' | 'HSV' | 'LAB',\n  options?: InterpolationOptions\n): number;\n\nexport function interpolateColor(\n  value: number,\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace: 'RGB' | 'HSV' | 'LAB' = 'RGB',\n  options: InterpolationOptions = {}\n): string | number {\n  'worklet';\n  if (colorSpace === 'HSV') {\n    return interpolateColorsHSV(\n      value,\n      inputRange,\n      getInterpolateHSV(outputRange),\n      options\n    );\n  } else if (colorSpace === 'RGB') {\n    return interpolateColorsRGB(\n      value,\n      inputRange,\n      getInterpolateRGB(outputRange),\n      options\n    );\n  } else if (colorSpace === 'LAB') {\n    return interpolateColorsLAB(\n      value,\n      inputRange,\n      getInterpolateLAB(outputRange),\n      options\n    );\n  }\n\n  throw new ReanimatedError(\n    `Invalid color space provided: ${\n      colorSpace as string\n    }. Supported values are: ['RGB', 'HSV', 'LAB'].`\n  );\n}\n\nexport enum ColorSpace {\n  RGB = 0,\n  HSV = 1,\n  LAB = 2,\n}\n\nexport interface InterpolateConfig {\n  inputRange: readonly number[];\n  outputRange: readonly (string | number)[];\n  colorSpace: ColorSpace;\n  cache: SharedValue<InterpolateRGB | InterpolateHSV | null>;\n  options: InterpolationOptions;\n}\n\nexport function useInterpolateConfig(\n  inputRange: readonly number[],\n  outputRange: readonly (string | number)[],\n  colorSpace = ColorSpace.RGB,\n  options: InterpolationOptions = {}\n): SharedValue<InterpolateConfig> {\n  return useSharedValue<InterpolateConfig>({\n    inputRange,\n    outputRange,\n    colorSpace,\n    cache: makeMutable<InterpolateRGB | InterpolateHSV | null>(null),\n    options,\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}